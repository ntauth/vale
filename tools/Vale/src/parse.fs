// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "parse.fsy"


open Ast
open Ast_util
open Parse_util
open Microsoft.FSharp.Math

let makeUop (op:uop) (loc:loc, (isCustom:bool, s:string)) (e:exp):exp =
  let op = if isCustom then UCustom s else op in
  ELoc (loc, EOp (Uop op, [e]))

let makeBop (op:bop) (loc:loc, (isCustom:bool, s:string)) (e1:exp) (e2:exp):exp =
  let op = if isCustom then BCustom s else op in
  ELoc (loc, EOp (Bop op, [e1; e2]))

let hasStorageAttr (a:attrs):bool =
  let rec r (a:attrs):bool =
    // Note: XPhysical Parameters need to be annotated explicitly. instead of being the default
    match a with
    | [] -> false
    | (Id ("thread_local" | "register"), [e])::a -> true
    | (Id "local", [e])::a -> true
    | (Id "state", [e])::a -> true
    | attr::a -> (r a)
  in
  (r a)

let storageAttrs (a:attrs):(var_storage * attrs) =
  let rec r (a:attrs):(var_storage list * attrs) list =
    match a with
    | [] -> [[], []]
    | (Id ("thread_local" | "register"), [e])::a -> ([XAlias (AliasThread, e)], [])::(r a)
    | (Id "local", [e])::a -> ([XAlias (AliasLocal, e)], [])::(r a)
    | (Id "state", [e])::a -> ([XState e], [])::(r a)
    | attr::a -> ([], [attr])::(r a)
  in
  let (s, a) = List.unzip (r a) in
  match (List.concat s, List.concat a) with
  | ([], a) -> (XPhysical, a)
  | ([s], a) -> (s, a)
  | (_::_, a) -> parse_err "more than one storage specifier for variable"

# 49 "parse.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | RESET_OPTIONS of (loc * string)
  | VERBATIM_BLOCK of (string list)
  | VERBATIM of (loc)
  | STRING of (loc * string)
  | INCLUDE of (loc)
  | FORALL of (loc)
  | EXISTS of (loc)
  | LAMBDA of (loc)
  | RETURNS of (loc)
  | LETS of (loc)
  | REQUIRES of (loc)
  | ENSURES of (loc)
  | READS of (loc)
  | MODIFIES of (loc)
  | PRESERVES of (loc)
  | LEMMA of (loc)
  | CALL of (loc)
  | RETURN of (loc)
  | IF of (loc)
  | WHILE of (loc)
  | FOR of (loc)
  | GOTO of (loc)
  | ASSERT of (loc)
  | BY of (loc)
  | ASSUME of (loc)
  | CALC of (loc)
  | DECREASES of (loc)
  | INVARIANT of (loc)
  | COLON of (loc)
  | COLONBAR of (loc)
  | YIELD of (loc)
  | SEMI of (loc)
  | TYPE of (loc)
  | VAR of (loc)
  | CONST of (loc)
  | READONLY of (loc)
  | FUNCTION of (loc)
  | AXIOM of (loc)
  | EXTERN of (loc)
  | PROCEDURE of (loc)
  | STATIC of (loc)
  | MODULE of (loc)
  | IMPORT of (loc)
  | OPERATOR of (loc)
  | IS of (loc)
  | THEN of (loc)
  | ELSE of (loc)
  | LET of (loc)
  | IN of (loc)
  | OUT of (loc)
  | INOUT of (loc)
  | REVEAL of (loc)
  | GHOST of (loc)
  | INLINE of (loc)
  | HAVOC of (loc)
  | OLD of (loc)
  | THIS of (loc)
  | COLONCOLON of (loc)
  | ATEQ of (loc * (bool * string))
  | COLONEQ of (loc * (bool * string))
  | AMPAMP of (loc * (bool * string))
  | BARBAR of (loc * (bool * string))
  | LTEQEQ of (loc * (bool * string))
  | EQEQGT of (loc * (bool * string))
  | LTEQEQGT of (loc * (bool * string))
  | PLUS of (loc * (bool * string))
  | MINUS of (loc * (bool * string))
  | STAR of (loc * (bool * string))
  | SLASH of (loc * (bool * string))
  | PERCENT of (loc * (bool * string))
  | LT of (loc * (bool * string))
  | GT of (loc * (bool * string))
  | EQ of (loc * (bool * string))
  | LE of (loc * (bool * string))
  | GE of (loc * (bool * string))
  | EQEQ of (loc * (bool * string))
  | NE of (loc * (bool * string))
  | BANG of (loc * (bool * string))
  | AT of (loc)
  | COMMA of (loc)
  | DOT of (loc)
  | QLBRACKET of (loc)
  | LBRACKET of (loc)
  | RBRACKET of (loc)
  | LBRACE of (loc)
  | RBRACE of (loc)
  | LPAREN of (loc)
  | RPAREN of (loc)
  | LBRACECOLON of (loc)
  | BV of (loc * int)
  | LITBOOL of (loc * bool)
  | LITREAL of (loc * string)
  | LITINT of (loc * bigint)
  | ID of (loc * string)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_RESET_OPTIONS
    | TOKEN_VERBATIM_BLOCK
    | TOKEN_VERBATIM
    | TOKEN_STRING
    | TOKEN_INCLUDE
    | TOKEN_FORALL
    | TOKEN_EXISTS
    | TOKEN_LAMBDA
    | TOKEN_RETURNS
    | TOKEN_LETS
    | TOKEN_REQUIRES
    | TOKEN_ENSURES
    | TOKEN_READS
    | TOKEN_MODIFIES
    | TOKEN_PRESERVES
    | TOKEN_LEMMA
    | TOKEN_CALL
    | TOKEN_RETURN
    | TOKEN_IF
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_GOTO
    | TOKEN_ASSERT
    | TOKEN_BY
    | TOKEN_ASSUME
    | TOKEN_CALC
    | TOKEN_DECREASES
    | TOKEN_INVARIANT
    | TOKEN_COLON
    | TOKEN_COLONBAR
    | TOKEN_YIELD
    | TOKEN_SEMI
    | TOKEN_TYPE
    | TOKEN_VAR
    | TOKEN_CONST
    | TOKEN_READONLY
    | TOKEN_FUNCTION
    | TOKEN_AXIOM
    | TOKEN_EXTERN
    | TOKEN_PROCEDURE
    | TOKEN_STATIC
    | TOKEN_MODULE
    | TOKEN_IMPORT
    | TOKEN_OPERATOR
    | TOKEN_IS
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_LET
    | TOKEN_IN
    | TOKEN_OUT
    | TOKEN_INOUT
    | TOKEN_REVEAL
    | TOKEN_GHOST
    | TOKEN_INLINE
    | TOKEN_HAVOC
    | TOKEN_OLD
    | TOKEN_THIS
    | TOKEN_COLONCOLON
    | TOKEN_ATEQ
    | TOKEN_COLONEQ
    | TOKEN_AMPAMP
    | TOKEN_BARBAR
    | TOKEN_LTEQEQ
    | TOKEN_EQEQGT
    | TOKEN_LTEQEQGT
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_STAR
    | TOKEN_SLASH
    | TOKEN_PERCENT
    | TOKEN_LT
    | TOKEN_GT
    | TOKEN_EQ
    | TOKEN_LE
    | TOKEN_GE
    | TOKEN_EQEQ
    | TOKEN_NE
    | TOKEN_BANG
    | TOKEN_AT
    | TOKEN_COMMA
    | TOKEN_DOT
    | TOKEN_QLBRACKET
    | TOKEN_LBRACKET
    | TOKEN_RBRACKET
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_LBRACECOLON
    | TOKEN_BV
    | TOKEN_LITBOOL
    | TOKEN_LITREAL
    | TOKEN_LITINT
    | TOKEN_ID
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_Include
    | NONTERM_Includes
    | NONTERM_Type
    | NONTERM_TypeArgs
    | NONTERM_Triggers
    | NONTERM_BindOp
    | NONTERM_Exp
    | NONTERM_Exp1
    | NONTERM_Exps1
    | NONTERM_Exps
    | NONTERM_AnyId
    | NONTERM_AnyIds1
    | NONTERM_AnyIds
    | NONTERM_AnyQualifiedId
    | NONTERM_OpToken
    | NONTERM_AnyIdOrOp
    | NONTERM_CalcOp
    | NONTERM_CalcOpOpt
    | NONTERM_Attrs
    | NONTERM_GhostOpt
    | NONTERM_StmtModifier
    | NONTERM_ExpCall
    | NONTERM_Var
    | NONTERM_VarAttrs
    | NONTERM_VarInit
    | NONTERM_VarType
    | NONTERM_Lhs
    | NONTERM_Lhss1
    | NONTERM_Decreases
    | NONTERM_ExpAssign
    | NONTERM_ExpAssigns1
    | NONTERM_ExpAssigns
    | NONTERM_Stmt
    | NONTERM_IfStmt
    | NONTERM_ElseOpt
    | NONTERM_CalcHints
    | NONTERM_CalcContents
    | NONTERM_Block
    | NONTERM_Formal
    | NONTERM_Formals1
    | NONTERM_Formals
    | NONTERM_InOut
    | NONTERM_ProcFormal
    | NONTERM_ProcFormals1
    | NONTERM_ProcFormals
    | NONTERM_LetBind
    | NONTERM_LetBinds
    | NONTERM_SemiExp
    | NONTERM_SemiExps
    | NONTERM_Req
    | NONTERM_SpecRaw
    | NONTERM_Specs
    | NONTERM_Invariants
    | NONTERM_Proc
    | NONTERM_ProcRet
    | NONTERM_Decl
    | NONTERM_Decls

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | RESET_OPTIONS _ -> 1 
  | VERBATIM_BLOCK _ -> 2 
  | VERBATIM _ -> 3 
  | STRING _ -> 4 
  | INCLUDE _ -> 5 
  | FORALL _ -> 6 
  | EXISTS _ -> 7 
  | LAMBDA _ -> 8 
  | RETURNS _ -> 9 
  | LETS _ -> 10 
  | REQUIRES _ -> 11 
  | ENSURES _ -> 12 
  | READS _ -> 13 
  | MODIFIES _ -> 14 
  | PRESERVES _ -> 15 
  | LEMMA _ -> 16 
  | CALL _ -> 17 
  | RETURN _ -> 18 
  | IF _ -> 19 
  | WHILE _ -> 20 
  | FOR _ -> 21 
  | GOTO _ -> 22 
  | ASSERT _ -> 23 
  | BY _ -> 24 
  | ASSUME _ -> 25 
  | CALC _ -> 26 
  | DECREASES _ -> 27 
  | INVARIANT _ -> 28 
  | COLON _ -> 29 
  | COLONBAR _ -> 30 
  | YIELD _ -> 31 
  | SEMI _ -> 32 
  | TYPE _ -> 33 
  | VAR _ -> 34 
  | CONST _ -> 35 
  | READONLY _ -> 36 
  | FUNCTION _ -> 37 
  | AXIOM _ -> 38 
  | EXTERN _ -> 39 
  | PROCEDURE _ -> 40 
  | STATIC _ -> 41 
  | MODULE _ -> 42 
  | IMPORT _ -> 43 
  | OPERATOR _ -> 44 
  | IS _ -> 45 
  | THEN _ -> 46 
  | ELSE _ -> 47 
  | LET _ -> 48 
  | IN _ -> 49 
  | OUT _ -> 50 
  | INOUT _ -> 51 
  | REVEAL _ -> 52 
  | GHOST _ -> 53 
  | INLINE _ -> 54 
  | HAVOC _ -> 55 
  | OLD _ -> 56 
  | THIS _ -> 57 
  | COLONCOLON _ -> 58 
  | ATEQ _ -> 59 
  | COLONEQ _ -> 60 
  | AMPAMP _ -> 61 
  | BARBAR _ -> 62 
  | LTEQEQ _ -> 63 
  | EQEQGT _ -> 64 
  | LTEQEQGT _ -> 65 
  | PLUS _ -> 66 
  | MINUS _ -> 67 
  | STAR _ -> 68 
  | SLASH _ -> 69 
  | PERCENT _ -> 70 
  | LT _ -> 71 
  | GT _ -> 72 
  | EQ _ -> 73 
  | LE _ -> 74 
  | GE _ -> 75 
  | EQEQ _ -> 76 
  | NE _ -> 77 
  | BANG _ -> 78 
  | AT _ -> 79 
  | COMMA _ -> 80 
  | DOT _ -> 81 
  | QLBRACKET _ -> 82 
  | LBRACKET _ -> 83 
  | RBRACKET _ -> 84 
  | LBRACE _ -> 85 
  | RBRACE _ -> 86 
  | LPAREN _ -> 87 
  | RPAREN _ -> 88 
  | LBRACECOLON _ -> 89 
  | BV _ -> 90 
  | LITBOOL _ -> 91 
  | LITREAL _ -> 92 
  | LITINT _ -> 93 
  | ID _ -> 94 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_RESET_OPTIONS 
  | 2 -> TOKEN_VERBATIM_BLOCK 
  | 3 -> TOKEN_VERBATIM 
  | 4 -> TOKEN_STRING 
  | 5 -> TOKEN_INCLUDE 
  | 6 -> TOKEN_FORALL 
  | 7 -> TOKEN_EXISTS 
  | 8 -> TOKEN_LAMBDA 
  | 9 -> TOKEN_RETURNS 
  | 10 -> TOKEN_LETS 
  | 11 -> TOKEN_REQUIRES 
  | 12 -> TOKEN_ENSURES 
  | 13 -> TOKEN_READS 
  | 14 -> TOKEN_MODIFIES 
  | 15 -> TOKEN_PRESERVES 
  | 16 -> TOKEN_LEMMA 
  | 17 -> TOKEN_CALL 
  | 18 -> TOKEN_RETURN 
  | 19 -> TOKEN_IF 
  | 20 -> TOKEN_WHILE 
  | 21 -> TOKEN_FOR 
  | 22 -> TOKEN_GOTO 
  | 23 -> TOKEN_ASSERT 
  | 24 -> TOKEN_BY 
  | 25 -> TOKEN_ASSUME 
  | 26 -> TOKEN_CALC 
  | 27 -> TOKEN_DECREASES 
  | 28 -> TOKEN_INVARIANT 
  | 29 -> TOKEN_COLON 
  | 30 -> TOKEN_COLONBAR 
  | 31 -> TOKEN_YIELD 
  | 32 -> TOKEN_SEMI 
  | 33 -> TOKEN_TYPE 
  | 34 -> TOKEN_VAR 
  | 35 -> TOKEN_CONST 
  | 36 -> TOKEN_READONLY 
  | 37 -> TOKEN_FUNCTION 
  | 38 -> TOKEN_AXIOM 
  | 39 -> TOKEN_EXTERN 
  | 40 -> TOKEN_PROCEDURE 
  | 41 -> TOKEN_STATIC 
  | 42 -> TOKEN_MODULE 
  | 43 -> TOKEN_IMPORT 
  | 44 -> TOKEN_OPERATOR 
  | 45 -> TOKEN_IS 
  | 46 -> TOKEN_THEN 
  | 47 -> TOKEN_ELSE 
  | 48 -> TOKEN_LET 
  | 49 -> TOKEN_IN 
  | 50 -> TOKEN_OUT 
  | 51 -> TOKEN_INOUT 
  | 52 -> TOKEN_REVEAL 
  | 53 -> TOKEN_GHOST 
  | 54 -> TOKEN_INLINE 
  | 55 -> TOKEN_HAVOC 
  | 56 -> TOKEN_OLD 
  | 57 -> TOKEN_THIS 
  | 58 -> TOKEN_COLONCOLON 
  | 59 -> TOKEN_ATEQ 
  | 60 -> TOKEN_COLONEQ 
  | 61 -> TOKEN_AMPAMP 
  | 62 -> TOKEN_BARBAR 
  | 63 -> TOKEN_LTEQEQ 
  | 64 -> TOKEN_EQEQGT 
  | 65 -> TOKEN_LTEQEQGT 
  | 66 -> TOKEN_PLUS 
  | 67 -> TOKEN_MINUS 
  | 68 -> TOKEN_STAR 
  | 69 -> TOKEN_SLASH 
  | 70 -> TOKEN_PERCENT 
  | 71 -> TOKEN_LT 
  | 72 -> TOKEN_GT 
  | 73 -> TOKEN_EQ 
  | 74 -> TOKEN_LE 
  | 75 -> TOKEN_GE 
  | 76 -> TOKEN_EQEQ 
  | 77 -> TOKEN_NE 
  | 78 -> TOKEN_BANG 
  | 79 -> TOKEN_AT 
  | 80 -> TOKEN_COMMA 
  | 81 -> TOKEN_DOT 
  | 82 -> TOKEN_QLBRACKET 
  | 83 -> TOKEN_LBRACKET 
  | 84 -> TOKEN_RBRACKET 
  | 85 -> TOKEN_LBRACE 
  | 86 -> TOKEN_RBRACE 
  | 87 -> TOKEN_LPAREN 
  | 88 -> TOKEN_RPAREN 
  | 89 -> TOKEN_LBRACECOLON 
  | 90 -> TOKEN_BV 
  | 91 -> TOKEN_LITBOOL 
  | 92 -> TOKEN_LITREAL 
  | 93 -> TOKEN_LITINT 
  | 94 -> TOKEN_ID 
  | 97 -> TOKEN_end_of_input
  | 95 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_Include 
    | 3 -> NONTERM_Includes 
    | 4 -> NONTERM_Includes 
    | 5 -> NONTERM_Type 
    | 6 -> NONTERM_Type 
    | 7 -> NONTERM_Type 
    | 8 -> NONTERM_Type 
    | 9 -> NONTERM_TypeArgs 
    | 10 -> NONTERM_TypeArgs 
    | 11 -> NONTERM_Triggers 
    | 12 -> NONTERM_Triggers 
    | 13 -> NONTERM_BindOp 
    | 14 -> NONTERM_BindOp 
    | 15 -> NONTERM_BindOp 
    | 16 -> NONTERM_Exp 
    | 17 -> NONTERM_Exp 
    | 18 -> NONTERM_Exp 
    | 19 -> NONTERM_Exp 
    | 20 -> NONTERM_Exp1 
    | 21 -> NONTERM_Exp1 
    | 22 -> NONTERM_Exp1 
    | 23 -> NONTERM_Exp1 
    | 24 -> NONTERM_Exp1 
    | 25 -> NONTERM_Exp1 
    | 26 -> NONTERM_Exp1 
    | 27 -> NONTERM_Exp1 
    | 28 -> NONTERM_Exp1 
    | 29 -> NONTERM_Exp1 
    | 30 -> NONTERM_Exp1 
    | 31 -> NONTERM_Exp1 
    | 32 -> NONTERM_Exp1 
    | 33 -> NONTERM_Exp1 
    | 34 -> NONTERM_Exp1 
    | 35 -> NONTERM_Exp1 
    | 36 -> NONTERM_Exp1 
    | 37 -> NONTERM_Exp1 
    | 38 -> NONTERM_Exp1 
    | 39 -> NONTERM_Exp1 
    | 40 -> NONTERM_Exp1 
    | 41 -> NONTERM_Exp1 
    | 42 -> NONTERM_Exp1 
    | 43 -> NONTERM_Exp1 
    | 44 -> NONTERM_Exp1 
    | 45 -> NONTERM_Exp1 
    | 46 -> NONTERM_Exp1 
    | 47 -> NONTERM_Exp1 
    | 48 -> NONTERM_Exp1 
    | 49 -> NONTERM_Exp1 
    | 50 -> NONTERM_Exp1 
    | 51 -> NONTERM_Exp1 
    | 52 -> NONTERM_Exp1 
    | 53 -> NONTERM_Exp1 
    | 54 -> NONTERM_Exp1 
    | 55 -> NONTERM_Exp1 
    | 56 -> NONTERM_Exp1 
    | 57 -> NONTERM_Exp1 
    | 58 -> NONTERM_Exp1 
    | 59 -> NONTERM_Exps1 
    | 60 -> NONTERM_Exps1 
    | 61 -> NONTERM_Exps 
    | 62 -> NONTERM_Exps 
    | 63 -> NONTERM_AnyId 
    | 64 -> NONTERM_AnyIds1 
    | 65 -> NONTERM_AnyIds1 
    | 66 -> NONTERM_AnyIds 
    | 67 -> NONTERM_AnyIds 
    | 68 -> NONTERM_AnyQualifiedId 
    | 69 -> NONTERM_AnyQualifiedId 
    | 70 -> NONTERM_OpToken 
    | 71 -> NONTERM_OpToken 
    | 72 -> NONTERM_OpToken 
    | 73 -> NONTERM_OpToken 
    | 74 -> NONTERM_OpToken 
    | 75 -> NONTERM_OpToken 
    | 76 -> NONTERM_OpToken 
    | 77 -> NONTERM_OpToken 
    | 78 -> NONTERM_OpToken 
    | 79 -> NONTERM_OpToken 
    | 80 -> NONTERM_OpToken 
    | 81 -> NONTERM_OpToken 
    | 82 -> NONTERM_OpToken 
    | 83 -> NONTERM_OpToken 
    | 84 -> NONTERM_OpToken 
    | 85 -> NONTERM_OpToken 
    | 86 -> NONTERM_OpToken 
    | 87 -> NONTERM_OpToken 
    | 88 -> NONTERM_OpToken 
    | 89 -> NONTERM_AnyIdOrOp 
    | 90 -> NONTERM_AnyIdOrOp 
    | 91 -> NONTERM_CalcOp 
    | 92 -> NONTERM_CalcOp 
    | 93 -> NONTERM_CalcOp 
    | 94 -> NONTERM_CalcOp 
    | 95 -> NONTERM_CalcOp 
    | 96 -> NONTERM_CalcOp 
    | 97 -> NONTERM_CalcOp 
    | 98 -> NONTERM_CalcOp 
    | 99 -> NONTERM_CalcOp 
    | 100 -> NONTERM_CalcOp 
    | 101 -> NONTERM_CalcOp 
    | 102 -> NONTERM_CalcOpOpt 
    | 103 -> NONTERM_CalcOpOpt 
    | 104 -> NONTERM_Attrs 
    | 105 -> NONTERM_Attrs 
    | 106 -> NONTERM_GhostOpt 
    | 107 -> NONTERM_GhostOpt 
    | 108 -> NONTERM_StmtModifier 
    | 109 -> NONTERM_StmtModifier 
    | 110 -> NONTERM_StmtModifier 
    | 111 -> NONTERM_ExpCall 
    | 112 -> NONTERM_ExpCall 
    | 113 -> NONTERM_ExpCall 
    | 114 -> NONTERM_ExpCall 
    | 115 -> NONTERM_ExpCall 
    | 116 -> NONTERM_Var 
    | 117 -> NONTERM_Var 
    | 118 -> NONTERM_VarAttrs 
    | 119 -> NONTERM_VarAttrs 
    | 120 -> NONTERM_VarInit 
    | 121 -> NONTERM_VarInit 
    | 122 -> NONTERM_VarType 
    | 123 -> NONTERM_VarType 
    | 124 -> NONTERM_Lhs 
    | 125 -> NONTERM_Lhs 
    | 126 -> NONTERM_Lhs 
    | 127 -> NONTERM_Lhss1 
    | 128 -> NONTERM_Lhss1 
    | 129 -> NONTERM_Decreases 
    | 130 -> NONTERM_Decreases 
    | 131 -> NONTERM_Decreases 
    | 132 -> NONTERM_ExpAssign 
    | 133 -> NONTERM_ExpAssigns1 
    | 134 -> NONTERM_ExpAssigns1 
    | 135 -> NONTERM_ExpAssigns 
    | 136 -> NONTERM_ExpAssigns 
    | 137 -> NONTERM_Stmt 
    | 138 -> NONTERM_Stmt 
    | 139 -> NONTERM_Stmt 
    | 140 -> NONTERM_Stmt 
    | 141 -> NONTERM_Stmt 
    | 142 -> NONTERM_Stmt 
    | 143 -> NONTERM_Stmt 
    | 144 -> NONTERM_Stmt 
    | 145 -> NONTERM_Stmt 
    | 146 -> NONTERM_Stmt 
    | 147 -> NONTERM_Stmt 
    | 148 -> NONTERM_Stmt 
    | 149 -> NONTERM_Stmt 
    | 150 -> NONTERM_Stmt 
    | 151 -> NONTERM_Stmt 
    | 152 -> NONTERM_Stmt 
    | 153 -> NONTERM_Stmt 
    | 154 -> NONTERM_Stmt 
    | 155 -> NONTERM_Stmt 
    | 156 -> NONTERM_Stmt 
    | 157 -> NONTERM_Stmt 
    | 158 -> NONTERM_Stmt 
    | 159 -> NONTERM_IfStmt 
    | 160 -> NONTERM_ElseOpt 
    | 161 -> NONTERM_ElseOpt 
    | 162 -> NONTERM_ElseOpt 
    | 163 -> NONTERM_CalcHints 
    | 164 -> NONTERM_CalcHints 
    | 165 -> NONTERM_CalcContents 
    | 166 -> NONTERM_CalcContents 
    | 167 -> NONTERM_Block 
    | 168 -> NONTERM_Block 
    | 169 -> NONTERM_Formal 
    | 170 -> NONTERM_Formal 
    | 171 -> NONTERM_Formals1 
    | 172 -> NONTERM_Formals1 
    | 173 -> NONTERM_Formals 
    | 174 -> NONTERM_Formals 
    | 175 -> NONTERM_InOut 
    | 176 -> NONTERM_InOut 
    | 177 -> NONTERM_InOut 
    | 178 -> NONTERM_ProcFormal 
    | 179 -> NONTERM_ProcFormal 
    | 180 -> NONTERM_ProcFormal 
    | 181 -> NONTERM_ProcFormals1 
    | 182 -> NONTERM_ProcFormals1 
    | 183 -> NONTERM_ProcFormals 
    | 184 -> NONTERM_ProcFormals 
    | 185 -> NONTERM_LetBind 
    | 186 -> NONTERM_LetBind 
    | 187 -> NONTERM_LetBinds 
    | 188 -> NONTERM_LetBinds 
    | 189 -> NONTERM_SemiExp 
    | 190 -> NONTERM_SemiExp 
    | 191 -> NONTERM_SemiExps 
    | 192 -> NONTERM_SemiExps 
    | 193 -> NONTERM_Req 
    | 194 -> NONTERM_SpecRaw 
    | 195 -> NONTERM_SpecRaw 
    | 196 -> NONTERM_SpecRaw 
    | 197 -> NONTERM_SpecRaw 
    | 198 -> NONTERM_SpecRaw 
    | 199 -> NONTERM_SpecRaw 
    | 200 -> NONTERM_SpecRaw 
    | 201 -> NONTERM_SpecRaw 
    | 202 -> NONTERM_SpecRaw 
    | 203 -> NONTERM_Specs 
    | 204 -> NONTERM_Specs 
    | 205 -> NONTERM_Invariants 
    | 206 -> NONTERM_Invariants 
    | 207 -> NONTERM_Proc 
    | 208 -> NONTERM_ProcRet 
    | 209 -> NONTERM_ProcRet 
    | 210 -> NONTERM_Decl 
    | 211 -> NONTERM_Decl 
    | 212 -> NONTERM_Decl 
    | 213 -> NONTERM_Decl 
    | 214 -> NONTERM_Decl 
    | 215 -> NONTERM_Decl 
    | 216 -> NONTERM_Decl 
    | 217 -> NONTERM_Decls 
    | 218 -> NONTERM_Decls 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 97 
let _fsyacc_tagOfErrorTerminal = 95

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | RESET_OPTIONS _ -> "RESET_OPTIONS" 
  | VERBATIM_BLOCK _ -> "VERBATIM_BLOCK" 
  | VERBATIM _ -> "VERBATIM" 
  | STRING _ -> "STRING" 
  | INCLUDE _ -> "INCLUDE" 
  | FORALL _ -> "FORALL" 
  | EXISTS _ -> "EXISTS" 
  | LAMBDA _ -> "LAMBDA" 
  | RETURNS _ -> "RETURNS" 
  | LETS _ -> "LETS" 
  | REQUIRES _ -> "REQUIRES" 
  | ENSURES _ -> "ENSURES" 
  | READS _ -> "READS" 
  | MODIFIES _ -> "MODIFIES" 
  | PRESERVES _ -> "PRESERVES" 
  | LEMMA _ -> "LEMMA" 
  | CALL _ -> "CALL" 
  | RETURN _ -> "RETURN" 
  | IF _ -> "IF" 
  | WHILE _ -> "WHILE" 
  | FOR _ -> "FOR" 
  | GOTO _ -> "GOTO" 
  | ASSERT _ -> "ASSERT" 
  | BY _ -> "BY" 
  | ASSUME _ -> "ASSUME" 
  | CALC _ -> "CALC" 
  | DECREASES _ -> "DECREASES" 
  | INVARIANT _ -> "INVARIANT" 
  | COLON _ -> "COLON" 
  | COLONBAR _ -> "COLONBAR" 
  | YIELD _ -> "YIELD" 
  | SEMI _ -> "SEMI" 
  | TYPE _ -> "TYPE" 
  | VAR _ -> "VAR" 
  | CONST _ -> "CONST" 
  | READONLY _ -> "READONLY" 
  | FUNCTION _ -> "FUNCTION" 
  | AXIOM _ -> "AXIOM" 
  | EXTERN _ -> "EXTERN" 
  | PROCEDURE _ -> "PROCEDURE" 
  | STATIC _ -> "STATIC" 
  | MODULE _ -> "MODULE" 
  | IMPORT _ -> "IMPORT" 
  | OPERATOR _ -> "OPERATOR" 
  | IS _ -> "IS" 
  | THEN _ -> "THEN" 
  | ELSE _ -> "ELSE" 
  | LET _ -> "LET" 
  | IN _ -> "IN" 
  | OUT _ -> "OUT" 
  | INOUT _ -> "INOUT" 
  | REVEAL _ -> "REVEAL" 
  | GHOST _ -> "GHOST" 
  | INLINE _ -> "INLINE" 
  | HAVOC _ -> "HAVOC" 
  | OLD _ -> "OLD" 
  | THIS _ -> "THIS" 
  | COLONCOLON _ -> "COLONCOLON" 
  | ATEQ _ -> "ATEQ" 
  | COLONEQ _ -> "COLONEQ" 
  | AMPAMP _ -> "AMPAMP" 
  | BARBAR _ -> "BARBAR" 
  | LTEQEQ _ -> "LTEQEQ" 
  | EQEQGT _ -> "EQEQGT" 
  | LTEQEQGT _ -> "LTEQEQGT" 
  | PLUS _ -> "PLUS" 
  | MINUS _ -> "MINUS" 
  | STAR _ -> "STAR" 
  | SLASH _ -> "SLASH" 
  | PERCENT _ -> "PERCENT" 
  | LT _ -> "LT" 
  | GT _ -> "GT" 
  | EQ _ -> "EQ" 
  | LE _ -> "LE" 
  | GE _ -> "GE" 
  | EQEQ _ -> "EQEQ" 
  | NE _ -> "NE" 
  | BANG _ -> "BANG" 
  | AT _ -> "AT" 
  | COMMA _ -> "COMMA" 
  | DOT _ -> "DOT" 
  | QLBRACKET _ -> "QLBRACKET" 
  | LBRACKET _ -> "LBRACKET" 
  | RBRACKET _ -> "RBRACKET" 
  | LBRACE _ -> "LBRACE" 
  | RBRACE _ -> "RBRACE" 
  | LPAREN _ -> "LPAREN" 
  | RPAREN _ -> "RPAREN" 
  | LBRACECOLON _ -> "LBRACECOLON" 
  | BV _ -> "BV" 
  | LITBOOL _ -> "LITBOOL" 
  | LITREAL _ -> "LITREAL" 
  | LITINT _ -> "LITINT" 
  | ID _ -> "ID" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | RESET_OPTIONS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | VERBATIM_BLOCK _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | VERBATIM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INCLUDE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FORALL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EXISTS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LAMBDA _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RETURNS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LETS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | REQUIRES _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ENSURES _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | READS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | MODIFIES _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PRESERVES _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LEMMA _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CALL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RETURN _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHILE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FOR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GOTO _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ASSERT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ASSUME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CALC _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECREASES _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INVARIANT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COLON _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COLONBAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SEMI _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TYPE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | VAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CONST _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | READONLY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FUNCTION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | AXIOM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EXTERN _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PROCEDURE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STATIC _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | MODULE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IMPORT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPERATOR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | THEN _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ELSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IN _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OUT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INOUT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | REVEAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GHOST _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INLINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HAVOC _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OLD _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | THIS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COLONCOLON _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ATEQ _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COLONEQ _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | AMPAMP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BARBAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LTEQEQ _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EQEQGT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LTEQEQGT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PLUS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | MINUS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SLASH _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PERCENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EQ _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EQEQ _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | AT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COMMA _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | QLBRACKET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LBRACKET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RBRACKET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LBRACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RBRACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LPAREN _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RPAREN _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LBRACECOLON _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BV _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LITBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LITREAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LITINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 8us; 8us; 8us; 2us; 65535us; 0us; 2us; 8us; 9us; 10us; 65535us; 20us; 12us; 24us; 11us; 26us; 12us; 222us; 13us; 371us; 14us; 381us; 15us; 385us; 16us; 389us; 17us; 452us; 18us; 460us; 19us; 2us; 65535us; 20us; 22us; 26us; 27us; 4us; 65535us; 30us; 31us; 53us; 54us; 277us; 278us; 292us; 293us; 50us; 65535us; 28us; 52us; 36us; 52us; 38us; 52us; 40us; 52us; 46us; 52us; 47us; 52us; 50us; 52us; 55us; 52us; 57us; 52us; 58us; 52us; 103us; 52us; 106us; 52us; 109us; 52us; 114us; 52us; 119us; 52us; 131us; 52us; 134us; 52us; 137us; 52us; 141us; 52us; 148us; 52us; 156us; 52us; 201us; 52us; 220us; 52us; 233us; 52us; 240us; 52us; 255us; 52us; 266us; 52us; 279us; 52us; 284us; 52us; 286us; 52us; 294us; 52us; 297us; 52us; 300us; 52us; 303us; 52us; 312us; 52us; 322us; 52us; 335us; 52us; 346us; 52us; 365us; 52us; 395us; 52us; 406us; 52us; 410us; 52us; 412us; 52us; 415us; 52us; 420us; 52us; 425us; 52us; 427us; 52us; 429us; 52us; 431us; 52us; 435us; 52us; 50us; 65535us; 28us; 155us; 36us; 37us; 38us; 39us; 40us; 41us; 46us; 48us; 47us; 49us; 50us; 51us; 55us; 56us; 57us; 59us; 58us; 59us; 103us; 104us; 106us; 107us; 109us; 110us; 114us; 155us; 119us; 120us; 131us; 132us; 134us; 135us; 137us; 138us; 141us; 142us; 148us; 155us; 156us; 155us; 201us; 155us; 220us; 221us; 233us; 155us; 240us; 241us; 255us; 256us; 266us; 267us; 279us; 280us; 284us; 285us; 286us; 287us; 294us; 295us; 297us; 298us; 300us; 301us; 303us; 304us; 312us; 313us; 322us; 362us; 335us; 336us; 346us; 347us; 365us; 362us; 395us; 396us; 406us; 403us; 410us; 403us; 412us; 403us; 415us; 403us; 420us; 403us; 425us; 403us; 427us; 403us; 429us; 403us; 431us; 403us; 435us; 403us; 79us; 65535us; 28us; 35us; 36us; 35us; 38us; 35us; 40us; 35us; 46us; 35us; 47us; 35us; 50us; 35us; 55us; 35us; 57us; 35us; 58us; 35us; 81us; 61us; 82us; 62us; 83us; 63us; 84us; 64us; 85us; 65us; 86us; 66us; 87us; 67us; 88us; 68us; 89us; 69us; 90us; 70us; 91us; 71us; 92us; 72us; 95us; 73us; 96us; 74us; 97us; 75us; 98us; 76us; 99us; 77us; 100us; 78us; 102us; 79us; 103us; 35us; 106us; 35us; 109us; 35us; 114us; 35us; 119us; 35us; 131us; 35us; 134us; 35us; 137us; 35us; 141us; 35us; 148us; 35us; 156us; 35us; 201us; 35us; 220us; 35us; 233us; 35us; 240us; 35us; 255us; 35us; 260us; 80us; 266us; 35us; 273us; 80us; 279us; 35us; 281us; 80us; 284us; 35us; 286us; 35us; 288us; 80us; 294us; 35us; 297us; 35us; 300us; 35us; 303us; 35us; 307us; 80us; 312us; 35us; 322us; 35us; 335us; 35us; 346us; 35us; 349us; 80us; 354us; 80us; 358us; 80us; 365us; 35us; 367us; 80us; 395us; 35us; 406us; 35us; 410us; 35us; 412us; 35us; 415us; 35us; 420us; 35us; 425us; 35us; 427us; 35us; 429us; 35us; 431us; 35us; 435us; 35us; 474us; 80us; 6us; 65535us; 28us; 29us; 114us; 158us; 148us; 158us; 156us; 157us; 201us; 158us; 233us; 236us; 3us; 65535us; 114us; 115us; 148us; 149us; 201us; 202us; 125us; 65535us; 20us; 160us; 24us; 160us; 26us; 160us; 28us; 146us; 36us; 146us; 38us; 146us; 40us; 146us; 42us; 369us; 43us; 369us; 46us; 146us; 47us; 146us; 50us; 146us; 52us; 369us; 55us; 146us; 57us; 146us; 58us; 146us; 81us; 146us; 82us; 146us; 83us; 146us; 84us; 146us; 85us; 146us; 86us; 146us; 87us; 146us; 88us; 146us; 89us; 146us; 90us; 146us; 91us; 146us; 92us; 146us; 93us; 94us; 95us; 146us; 96us; 146us; 97us; 146us; 98us; 146us; 99us; 146us; 100us; 146us; 102us; 146us; 103us; 146us; 106us; 146us; 109us; 146us; 112us; 113us; 114us; 146us; 117us; 118us; 119us; 146us; 131us; 146us; 134us; 146us; 137us; 146us; 141us; 146us; 148us; 146us; 156us; 146us; 200us; 201us; 201us; 146us; 220us; 146us; 222us; 160us; 226us; 227us; 231us; 223us; 233us; 146us; 240us; 146us; 243us; 223us; 247us; 248us; 255us; 146us; 260us; 147us; 264us; 223us; 266us; 146us; 268us; 223us; 273us; 147us; 276us; 369us; 279us; 146us; 281us; 147us; 284us; 146us; 286us; 146us; 288us; 147us; 291us; 369us; 294us; 146us; 297us; 146us; 300us; 146us; 303us; 146us; 307us; 147us; 310us; 311us; 312us; 146us; 315us; 316us; 322us; 146us; 325us; 326us; 328us; 329us; 333us; 338us; 335us; 146us; 339us; 340us; 346us; 146us; 349us; 147us; 354us; 147us; 358us; 147us; 365us; 146us; 367us; 147us; 371us; 160us; 373us; 369us; 379us; 380us; 381us; 160us; 383us; 384us; 385us; 160us; 387us; 388us; 389us; 160us; 395us; 146us; 398us; 399us; 401us; 370us; 406us; 146us; 408us; 370us; 410us; 146us; 412us; 146us; 415us; 146us; 417us; 418us; 420us; 146us; 422us; 423us; 425us; 146us; 427us; 146us; 429us; 146us; 431us; 146us; 435us; 146us; 447us; 160us; 450us; 451us; 452us; 160us; 455us; 183us; 457us; 369us; 460us; 160us; 461us; 462us; 465us; 183us; 474us; 147us; 0us; 65535us; 0us; 65535us; 11us; 65535us; 20us; 10us; 24us; 10us; 26us; 10us; 222us; 10us; 371us; 10us; 381us; 10us; 385us; 10us; 389us; 10us; 447us; 161us; 452us; 10us; 460us; 10us; 1us; 65535us; 185us; 186us; 2us; 65535us; 455us; 456us; 465us; 466us; 2us; 65535us; 320us; 199us; 363us; 199us; 2us; 65535us; 320us; 321us; 363us; 364us; 11us; 65535us; 5us; 6us; 203us; 204us; 215us; 216us; 217us; 218us; 378us; 379us; 382us; 383us; 386us; 387us; 444us; 445us; 449us; 450us; 454us; 455us; 464us; 465us; 2us; 65535us; 2us; 438us; 477us; 438us; 10us; 65535us; 260us; 252us; 273us; 252us; 281us; 252us; 288us; 252us; 307us; 252us; 349us; 252us; 354us; 252us; 358us; 252us; 367us; 252us; 474us; 252us; 2us; 65535us; 219us; 220us; 239us; 240us; 2us; 65535us; 58us; 226us; 225us; 226us; 10us; 65535us; 260us; 328us; 273us; 328us; 281us; 328us; 288us; 328us; 307us; 328us; 349us; 328us; 354us; 328us; 358us; 328us; 367us; 328us; 474us; 328us; 1us; 65535us; 330us; 331us; 2us; 65535us; 227us; 228us; 329us; 330us; 14us; 65535us; 231us; 230us; 243us; 230us; 260us; 230us; 264us; 230us; 268us; 230us; 273us; 230us; 281us; 230us; 288us; 230us; 307us; 230us; 349us; 230us; 354us; 230us; 358us; 230us; 367us; 230us; 474us; 230us; 14us; 65535us; 231us; 232us; 243us; 238us; 260us; 238us; 264us; 238us; 268us; 238us; 273us; 238us; 281us; 238us; 288us; 238us; 307us; 238us; 349us; 238us; 354us; 238us; 358us; 238us; 367us; 238us; 474us; 238us; 2us; 65535us; 258us; 259us; 271us; 272us; 13us; 65535us; 243us; 242us; 260us; 342us; 264us; 242us; 268us; 242us; 273us; 342us; 281us; 342us; 288us; 342us; 307us; 342us; 349us; 342us; 354us; 342us; 358us; 342us; 367us; 342us; 474us; 342us; 3us; 65535us; 243us; 244us; 264us; 245us; 268us; 245us; 2us; 65535us; 264us; 265us; 268us; 269us; 10us; 65535us; 260us; 367us; 273us; 367us; 281us; 367us; 288us; 367us; 307us; 367us; 349us; 367us; 354us; 367us; 358us; 367us; 367us; 367us; 474us; 367us; 2us; 65535us; 252us; 253us; 353us; 357us; 1us; 65535us; 351us; 352us; 2us; 65535us; 360us; 361us; 364us; 365us; 2us; 65535us; 322us; 323us; 365us; 366us; 10us; 65535us; 260us; 261us; 273us; 274us; 281us; 282us; 288us; 289us; 307us; 308us; 349us; 350us; 354us; 355us; 358us; 359us; 367us; 368us; 474us; 475us; 10us; 65535us; 42us; 44us; 43us; 45us; 52us; 372us; 276us; 372us; 291us; 372us; 333us; 334us; 373us; 372us; 401us; 394us; 408us; 394us; 457us; 372us; 5us; 65535us; 52us; 375us; 276us; 375us; 291us; 375us; 373us; 374us; 457us; 375us; 4us; 65535us; 52us; 53us; 276us; 277us; 291us; 292us; 457us; 458us; 3us; 65535us; 391us; 378us; 441us; 378us; 467us; 378us; 3us; 65535us; 391us; 390us; 441us; 390us; 467us; 390us; 3us; 65535us; 391us; 392us; 441us; 393us; 467us; 393us; 2us; 65535us; 441us; 442us; 467us; 468us; 2us; 65535us; 401us; 401us; 408us; 401us; 2us; 65535us; 401us; 402us; 408us; 409us; 10us; 65535us; 406us; 406us; 410us; 406us; 412us; 406us; 415us; 406us; 420us; 406us; 425us; 406us; 427us; 406us; 429us; 406us; 431us; 406us; 435us; 406us; 10us; 65535us; 406us; 407us; 410us; 411us; 412us; 413us; 415us; 416us; 420us; 421us; 425us; 426us; 427us; 428us; 429us; 430us; 431us; 432us; 435us; 436us; 0us; 65535us; 2us; 65535us; 433us; 433us; 470us; 433us; 2us; 65535us; 433us; 434us; 470us; 471us; 3us; 65535us; 257us; 258us; 270us; 271us; 436us; 437us; 2us; 65535us; 2us; 464us; 477us; 464us; 1us; 65535us; 469us; 470us; 2us; 65535us; 2us; 477us; 477us; 477us; 2us; 65535us; 2us; 3us; 477us; 478us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 20us; 23us; 28us; 79us; 130us; 210us; 217us; 221us; 347us; 348us; 349us; 361us; 363us; 366us; 369us; 372us; 384us; 387us; 398us; 401us; 404us; 415us; 417us; 420us; 435us; 450us; 453us; 467us; 471us; 474us; 485us; 488us; 490us; 493us; 496us; 507us; 518us; 524us; 529us; 533us; 537us; 541us; 544us; 547us; 550us; 561us; 572us; 573us; 576us; 579us; 583us; 586us; 588us; 591us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 2us; 1us; 4us; 1us; 4us; 2us; 5us; 69us; 3us; 6us; 7us; 8us; 4us; 6us; 7us; 9us; 10us; 3us; 6us; 7us; 123us; 3us; 6us; 7us; 170us; 3us; 6us; 7us; 178us; 3us; 6us; 7us; 179us; 3us; 6us; 7us; 180us; 3us; 6us; 7us; 213us; 3us; 6us; 7us; 214us; 2us; 6us; 7us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 8us; 1us; 8us; 1us; 10us; 1us; 10us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 14us; 1us; 15us; 25us; 16us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 1us; 17us; 1us; 17us; 1us; 17us; 1us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 2us; 18us; 190us; 1us; 18us; 2us; 18us; 190us; 1us; 18us; 2us; 18us; 190us; 1us; 18us; 2us; 18us; 190us; 1us; 18us; 1us; 18us; 1us; 19us; 1us; 19us; 1us; 19us; 1us; 19us; 1us; 19us; 2us; 20us; 39us; 3us; 20us; 39us; 126us; 1us; 20us; 1us; 20us; 25us; 21us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 26us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 34us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 39us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 25us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 158us; 1us; 21us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 26us; 1us; 27us; 1us; 28us; 1us; 29us; 1us; 30us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 39us; 1us; 40us; 1us; 41us; 1us; 41us; 1us; 41us; 2us; 42us; 43us; 2us; 42us; 43us; 1us; 42us; 1us; 43us; 1us; 43us; 1us; 43us; 3us; 44us; 45us; 46us; 2us; 44us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 51us; 1us; 51us; 1us; 51us; 2us; 52us; 53us; 1us; 52us; 1us; 52us; 1us; 52us; 1us; 53us; 1us; 53us; 1us; 53us; 1us; 53us; 1us; 53us; 1us; 53us; 1us; 54us; 1us; 54us; 1us; 54us; 1us; 54us; 1us; 55us; 2us; 55us; 125us; 1us; 56us; 2us; 56us; 124us; 1us; 56us; 1us; 56us; 1us; 56us; 2us; 57us; 63us; 3us; 57us; 63us; 137us; 1us; 58us; 1us; 58us; 2us; 59us; 60us; 1us; 60us; 1us; 60us; 1us; 62us; 1us; 63us; 1us; 68us; 2us; 69us; 211us; 1us; 69us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 90us; 1us; 90us; 1us; 90us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 97us; 1us; 98us; 1us; 99us; 1us; 100us; 1us; 101us; 1us; 103us; 1us; 105us; 1us; 105us; 1us; 105us; 1us; 105us; 1us; 105us; 1us; 107us; 2us; 109us; 119us; 1us; 110us; 1us; 112us; 1us; 113us; 1us; 114us; 1us; 115us; 1us; 116us; 1us; 117us; 1us; 117us; 1us; 118us; 1us; 118us; 1us; 119us; 1us; 119us; 1us; 121us; 1us; 121us; 1us; 121us; 1us; 123us; 1us; 124us; 1us; 125us; 1us; 126us; 1us; 126us; 1us; 126us; 1us; 126us; 1us; 126us; 2us; 127us; 128us; 1us; 128us; 1us; 128us; 2us; 130us; 131us; 1us; 130us; 1us; 130us; 1us; 131us; 1us; 131us; 1us; 132us; 1us; 132us; 1us; 132us; 1us; 132us; 2us; 133us; 134us; 1us; 134us; 1us; 134us; 1us; 136us; 1us; 137us; 1us; 138us; 1us; 138us; 1us; 138us; 1us; 139us; 1us; 139us; 1us; 140us; 1us; 140us; 1us; 141us; 1us; 141us; 1us; 141us; 1us; 141us; 1us; 141us; 1us; 141us; 1us; 141us; 1us; 141us; 1us; 141us; 1us; 142us; 1us; 142us; 1us; 142us; 1us; 142us; 1us; 142us; 1us; 142us; 1us; 142us; 1us; 142us; 1us; 142us; 1us; 142us; 1us; 142us; 1us; 142us; 1us; 142us; 2us; 143us; 144us; 2us; 143us; 144us; 2us; 143us; 144us; 1us; 143us; 1us; 143us; 1us; 143us; 1us; 143us; 1us; 143us; 1us; 144us; 1us; 144us; 1us; 144us; 1us; 144us; 1us; 144us; 1us; 144us; 1us; 144us; 1us; 145us; 1us; 145us; 1us; 145us; 1us; 145us; 1us; 145us; 1us; 145us; 1us; 146us; 1us; 146us; 1us; 146us; 1us; 147us; 1us; 147us; 1us; 147us; 4us; 148us; 149us; 150us; 151us; 2us; 148us; 149us; 1us; 148us; 1us; 149us; 1us; 149us; 1us; 149us; 1us; 149us; 2us; 150us; 151us; 2us; 150us; 151us; 2us; 150us; 151us; 1us; 150us; 1us; 150us; 1us; 151us; 1us; 151us; 1us; 151us; 1us; 151us; 1us; 151us; 1us; 152us; 1us; 152us; 1us; 152us; 1us; 152us; 1us; 152us; 1us; 153us; 1us; 153us; 1us; 153us; 1us; 154us; 1us; 154us; 1us; 154us; 1us; 154us; 1us; 154us; 2us; 155us; 156us; 1us; 155us; 1us; 155us; 1us; 155us; 1us; 155us; 3us; 156us; 169us; 170us; 1us; 156us; 1us; 156us; 1us; 156us; 1us; 157us; 1us; 157us; 1us; 158us; 1us; 159us; 1us; 159us; 1us; 159us; 1us; 159us; 1us; 159us; 1us; 159us; 1us; 159us; 1us; 159us; 2us; 161us; 162us; 1us; 161us; 1us; 161us; 1us; 161us; 1us; 162us; 1us; 164us; 1us; 164us; 1us; 164us; 1us; 164us; 2us; 165us; 166us; 2us; 165us; 166us; 1us; 166us; 1us; 166us; 1us; 166us; 1us; 168us; 1us; 168us; 2us; 169us; 170us; 3us; 169us; 170us; 186us; 1us; 170us; 2us; 171us; 172us; 1us; 172us; 1us; 172us; 1us; 174us; 1us; 176us; 1us; 177us; 1us; 178us; 1us; 178us; 1us; 178us; 1us; 178us; 1us; 179us; 1us; 179us; 1us; 179us; 1us; 179us; 1us; 180us; 1us; 180us; 1us; 180us; 1us; 180us; 2us; 181us; 182us; 1us; 182us; 1us; 182us; 1us; 184us; 1us; 185us; 1us; 185us; 1us; 185us; 1us; 185us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 188us; 1us; 188us; 1us; 189us; 1us; 189us; 1us; 190us; 1us; 192us; 1us; 192us; 1us; 194us; 1us; 194us; 3us; 195us; 197us; 198us; 1us; 195us; 2us; 196us; 199us; 1us; 196us; 1us; 197us; 1us; 197us; 1us; 197us; 1us; 198us; 1us; 198us; 1us; 198us; 1us; 198us; 1us; 198us; 1us; 199us; 1us; 199us; 1us; 199us; 1us; 199us; 1us; 199us; 1us; 200us; 1us; 200us; 1us; 201us; 1us; 201us; 1us; 202us; 1us; 202us; 1us; 204us; 1us; 204us; 1us; 206us; 1us; 206us; 1us; 206us; 1us; 207us; 1us; 207us; 1us; 209us; 1us; 209us; 1us; 209us; 1us; 209us; 1us; 210us; 1us; 210us; 1us; 210us; 1us; 211us; 1us; 212us; 1us; 213us; 1us; 213us; 1us; 213us; 1us; 213us; 1us; 213us; 1us; 214us; 1us; 214us; 1us; 214us; 1us; 214us; 1us; 214us; 1us; 214us; 1us; 214us; 1us; 214us; 1us; 214us; 1us; 214us; 2us; 215us; 216us; 2us; 215us; 216us; 2us; 215us; 216us; 2us; 215us; 216us; 2us; 215us; 216us; 2us; 215us; 216us; 2us; 215us; 216us; 2us; 215us; 216us; 1us; 215us; 1us; 215us; 1us; 216us; 1us; 216us; 1us; 216us; 1us; 218us; 1us; 218us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 32us; 36us; 40us; 44us; 48us; 52us; 56us; 60us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 79us; 81us; 83us; 85us; 87us; 89us; 91us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 134us; 136us; 139us; 141us; 144us; 146us; 149us; 151us; 153us; 155us; 157us; 159us; 161us; 163us; 166us; 170us; 172us; 174us; 200us; 226us; 252us; 278us; 304us; 330us; 356us; 382us; 408us; 434us; 460us; 486us; 512us; 538us; 564us; 590us; 616us; 642us; 668us; 694us; 696us; 698us; 700us; 702us; 704us; 706us; 708us; 710us; 712us; 714us; 716us; 718us; 720us; 722us; 724us; 726us; 728us; 730us; 732us; 734us; 736us; 738us; 740us; 742us; 744us; 747us; 750us; 752us; 754us; 756us; 758us; 762us; 765us; 767us; 769us; 771us; 773us; 775us; 777us; 779us; 781us; 783us; 785us; 787us; 789us; 791us; 793us; 795us; 797us; 800us; 802us; 804us; 806us; 808us; 810us; 812us; 814us; 816us; 818us; 820us; 822us; 824us; 826us; 828us; 831us; 833us; 836us; 838us; 840us; 842us; 845us; 849us; 851us; 853us; 856us; 858us; 860us; 862us; 864us; 866us; 869us; 871us; 873us; 875us; 877us; 879us; 881us; 883us; 885us; 887us; 889us; 891us; 893us; 895us; 897us; 899us; 901us; 903us; 905us; 907us; 909us; 911us; 913us; 915us; 917us; 919us; 921us; 923us; 925us; 927us; 929us; 931us; 933us; 935us; 937us; 939us; 941us; 943us; 945us; 947us; 949us; 951us; 953us; 955us; 957us; 960us; 962us; 964us; 966us; 968us; 970us; 972us; 974us; 976us; 978us; 980us; 982us; 984us; 986us; 988us; 990us; 992us; 994us; 996us; 998us; 1000us; 1002us; 1004us; 1006us; 1009us; 1011us; 1013us; 1016us; 1018us; 1020us; 1022us; 1024us; 1026us; 1028us; 1030us; 1032us; 1035us; 1037us; 1039us; 1041us; 1043us; 1045us; 1047us; 1049us; 1051us; 1053us; 1055us; 1057us; 1059us; 1061us; 1063us; 1065us; 1067us; 1069us; 1071us; 1073us; 1075us; 1077us; 1079us; 1081us; 1083us; 1085us; 1087us; 1089us; 1091us; 1093us; 1095us; 1097us; 1099us; 1101us; 1104us; 1107us; 1110us; 1112us; 1114us; 1116us; 1118us; 1120us; 1122us; 1124us; 1126us; 1128us; 1130us; 1132us; 1134us; 1136us; 1138us; 1140us; 1142us; 1144us; 1146us; 1148us; 1150us; 1152us; 1154us; 1156us; 1158us; 1163us; 1166us; 1168us; 1170us; 1172us; 1174us; 1176us; 1179us; 1182us; 1185us; 1187us; 1189us; 1191us; 1193us; 1195us; 1197us; 1199us; 1201us; 1203us; 1205us; 1207us; 1209us; 1211us; 1213us; 1215us; 1217us; 1219us; 1221us; 1223us; 1225us; 1228us; 1230us; 1232us; 1234us; 1236us; 1240us; 1242us; 1244us; 1246us; 1248us; 1250us; 1252us; 1254us; 1256us; 1258us; 1260us; 1262us; 1264us; 1266us; 1268us; 1271us; 1273us; 1275us; 1277us; 1279us; 1281us; 1283us; 1285us; 1287us; 1290us; 1293us; 1295us; 1297us; 1299us; 1301us; 1303us; 1306us; 1310us; 1312us; 1315us; 1317us; 1319us; 1321us; 1323us; 1325us; 1327us; 1329us; 1331us; 1333us; 1335us; 1337us; 1339us; 1341us; 1343us; 1345us; 1347us; 1349us; 1352us; 1354us; 1356us; 1358us; 1360us; 1362us; 1364us; 1366us; 1368us; 1370us; 1372us; 1374us; 1376us; 1378us; 1380us; 1382us; 1384us; 1386us; 1388us; 1390us; 1394us; 1396us; 1399us; 1401us; 1403us; 1405us; 1407us; 1409us; 1411us; 1413us; 1415us; 1417us; 1419us; 1421us; 1423us; 1425us; 1427us; 1429us; 1431us; 1433us; 1435us; 1437us; 1439us; 1441us; 1443us; 1445us; 1447us; 1449us; 1451us; 1453us; 1455us; 1457us; 1459us; 1461us; 1463us; 1465us; 1467us; 1469us; 1471us; 1473us; 1475us; 1477us; 1479us; 1481us; 1483us; 1485us; 1487us; 1489us; 1491us; 1493us; 1495us; 1497us; 1499us; 1501us; 1504us; 1507us; 1510us; 1513us; 1516us; 1519us; 1522us; 1525us; 1527us; 1529us; 1531us; 1533us; 1535us; 1537us; |]
let _fsyacc_action_rows = 479
let _fsyacc_actionTableElements = [|1us; 16387us; 5us; 5us; 0us; 49152us; 7us; 16490us; 0us; 16601us; 1us; 448us; 3us; 444us; 34us; 449us; 37us; 454us; 42us; 447us; 53us; 205us; 1us; 32768us; 0us; 4us; 0us; 16385us; 1us; 16488us; 89us; 200us; 1us; 32768us; 4us; 7us; 0us; 16386us; 1us; 16387us; 5us; 5us; 0us; 16388us; 1us; 16389us; 81us; 162us; 2us; 32768us; 87us; 20us; 88us; 25us; 2us; 16393us; 80us; 26us; 87us; 20us; 1us; 16507us; 87us; 20us; 1us; 16554us; 87us; 20us; 1us; 16562us; 87us; 20us; 1us; 16563us; 87us; 20us; 1us; 16564us; 87us; 20us; 2us; 32768us; 32us; 453us; 87us; 20us; 2us; 32768us; 60us; 461us; 87us; 20us; 3us; 32768us; 87us; 24us; 88us; 21us; 94us; 159us; 0us; 16390us; 1us; 32768us; 88us; 23us; 0us; 16391us; 2us; 32768us; 87us; 24us; 94us; 159us; 0us; 16392us; 2us; 32768us; 87us; 24us; 94us; 159us; 0us; 16394us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 86us; 30us; 1us; 16395us; 85us; 28us; 0us; 16396us; 0us; 16397us; 0us; 16398us; 0us; 16399us; 21us; 16400us; 45us; 93us; 61us; 84us; 62us; 85us; 63us; 83us; 64us; 82us; 65us; 81us; 66us; 95us; 67us; 96us; 68us; 97us; 69us; 98us; 70us; 99us; 71us; 89us; 72us; 90us; 73us; 87us; 74us; 91us; 75us; 92us; 76us; 86us; 77us; 88us; 81us; 112us; 82us; 103us; 83us; 106us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 46us; 38us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 47us; 40us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16401us; 1us; 32768us; 94us; 159us; 1us; 32768us; 94us; 159us; 1us; 32768us; 60us; 46us; 1us; 32768us; 60us; 47us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 49us; 50us; 2us; 32768us; 32us; 405us; 49us; 50us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16402us; 1us; 16557us; 94us; 159us; 1us; 16395us; 85us; 28us; 1us; 32768us; 58us; 55us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16403us; 18us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 67us; 100us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 20us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 34us; 212us; 35us; 140us; 48us; 42us; 53us; 213us; 56us; 130us; 57us; 144us; 67us; 100us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 88us; 60us; 0us; 16404us; 20us; 16405us; 45us; 93us; 61us; 84us; 62us; 85us; 63us; 83us; 64us; 82us; 66us; 95us; 67us; 96us; 68us; 97us; 69us; 98us; 70us; 99us; 71us; 89us; 72us; 90us; 73us; 87us; 74us; 91us; 75us; 92us; 76us; 86us; 77us; 88us; 81us; 112us; 82us; 103us; 83us; 106us; 20us; 16406us; 45us; 93us; 61us; 84us; 62us; 85us; 63us; 83us; 64us; 82us; 66us; 95us; 67us; 96us; 68us; 97us; 69us; 98us; 70us; 99us; 71us; 89us; 72us; 90us; 73us; 87us; 74us; 91us; 75us; 92us; 76us; 86us; 77us; 88us; 81us; 112us; 82us; 103us; 83us; 106us; 18us; 16407us; 45us; 93us; 61us; 84us; 62us; 85us; 66us; 95us; 67us; 96us; 68us; 97us; 69us; 98us; 70us; 99us; 71us; 89us; 72us; 90us; 73us; 87us; 74us; 91us; 75us; 92us; 76us; 86us; 77us; 88us; 81us; 112us; 82us; 103us; 83us; 106us; 16us; 16408us; 45us; 93us; 66us; 95us; 67us; 96us; 68us; 97us; 69us; 98us; 70us; 99us; 71us; 89us; 72us; 90us; 73us; 87us; 74us; 91us; 75us; 92us; 76us; 86us; 77us; 88us; 81us; 112us; 82us; 103us; 83us; 106us; 17us; 16409us; 45us; 93us; 61us; 84us; 66us; 95us; 67us; 96us; 68us; 97us; 69us; 98us; 70us; 99us; 71us; 89us; 72us; 90us; 73us; 87us; 74us; 91us; 75us; 92us; 76us; 86us; 77us; 88us; 81us; 112us; 82us; 103us; 83us; 106us; 13us; 16410us; 45us; 93us; 66us; 95us; 67us; 96us; 68us; 97us; 69us; 98us; 70us; 99us; 71us; 89us; 72us; 90us; 74us; 91us; 75us; 92us; 81us; 112us; 82us; 103us; 83us; 106us; 13us; 16411us; 45us; 93us; 66us; 95us; 67us; 96us; 68us; 97us; 69us; 98us; 70us; 99us; 71us; 89us; 72us; 90us; 74us; 91us; 75us; 92us; 81us; 112us; 82us; 103us; 83us; 106us; 13us; 16412us; 45us; 93us; 66us; 95us; 67us; 96us; 68us; 97us; 69us; 98us; 70us; 99us; 71us; 89us; 72us; 90us; 74us; 91us; 75us; 92us; 81us; 112us; 82us; 103us; 83us; 106us; 8us; 16413us; 66us; 95us; 67us; 96us; 68us; 97us; 69us; 98us; 70us; 99us; 81us; 112us; 82us; 103us; 83us; 106us; 8us; 16414us; 66us; 95us; 67us; 96us; 68us; 97us; 69us; 98us; 70us; 99us; 81us; 112us; 82us; 103us; 83us; 106us; 8us; 16415us; 66us; 95us; 67us; 96us; 68us; 97us; 69us; 98us; 70us; 99us; 81us; 112us; 82us; 103us; 83us; 106us; 8us; 16416us; 66us; 95us; 67us; 96us; 68us; 97us; 69us; 98us; 70us; 99us; 81us; 112us; 82us; 103us; 83us; 106us; 6us; 16418us; 68us; 97us; 69us; 98us; 70us; 99us; 81us; 112us; 82us; 103us; 83us; 106us; 6us; 16419us; 68us; 97us; 69us; 98us; 70us; 99us; 81us; 112us; 82us; 103us; 83us; 106us; 3us; 16420us; 81us; 112us; 82us; 103us; 83us; 106us; 3us; 16421us; 81us; 112us; 82us; 103us; 83us; 106us; 3us; 16422us; 81us; 112us; 82us; 103us; 83us; 106us; 22us; 32768us; 45us; 93us; 61us; 84us; 62us; 85us; 63us; 83us; 64us; 82us; 65us; 81us; 66us; 95us; 67us; 96us; 68us; 97us; 69us; 98us; 70us; 99us; 71us; 89us; 72us; 90us; 73us; 87us; 74us; 91us; 75us; 92us; 76us; 86us; 77us; 88us; 81us; 112us; 82us; 103us; 83us; 106us; 88us; 101us; 3us; 16424us; 81us; 112us; 82us; 103us; 83us; 106us; 22us; 32768us; 32us; 344us; 45us; 93us; 61us; 84us; 62us; 85us; 63us; 83us; 64us; 82us; 65us; 81us; 66us; 95us; 67us; 96us; 68us; 97us; 69us; 98us; 70us; 99us; 71us; 89us; 72us; 90us; 73us; 87us; 74us; 91us; 75us; 92us; 76us; 86us; 77us; 88us; 81us; 112us; 82us; 103us; 83us; 106us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 94us; 159us; 0us; 16417us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16423us; 12us; 32768us; 4us; 125us; 35us; 140us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 84us; 105us; 0us; 16425us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 2us; 32768us; 60us; 109us; 84us; 108us; 0us; 16426us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 84us; 111us; 0us; 16427us; 2us; 32768us; 87us; 117us; 94us; 159us; 1us; 16428us; 87us; 114us; 17us; 16445us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 88us; 116us; 0us; 16429us; 1us; 32768us; 94us; 159us; 1us; 32768us; 60us; 119us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 88us; 121us; 0us; 16430us; 0us; 16431us; 0us; 16432us; 0us; 16433us; 0us; 16434us; 1us; 32768us; 87us; 127us; 1us; 32768us; 93us; 128us; 1us; 32768us; 88us; 129us; 0us; 16435us; 2us; 32768us; 83us; 134us; 87us; 131us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 88us; 133us; 0us; 16436us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 84us; 136us; 1us; 32768us; 87us; 137us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 88us; 139us; 0us; 16437us; 1us; 32768us; 87us; 141us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 88us; 143us; 0us; 16438us; 0us; 16439us; 2us; 16439us; 60us; 16509us; 80us; 16509us; 1us; 32768us; 87us; 148us; 1us; 16508us; 87us; 148us; 17us; 16445us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 88us; 150us; 0us; 16440us; 1us; 16441us; 87us; 16447us; 4us; 16441us; 29us; 246us; 60us; 16447us; 80us; 16447us; 87us; 16447us; 1us; 32768us; 94us; 154us; 0us; 16442us; 1us; 16443us; 80us; 156us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16444us; 0us; 16446us; 0us; 16447us; 0us; 16452us; 1us; 16595us; 81us; 162us; 1us; 32768us; 94us; 163us; 0us; 16453us; 0us; 16454us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 0us; 16458us; 0us; 16459us; 0us; 16460us; 0us; 16461us; 0us; 16462us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 0us; 16472us; 0us; 16473us; 1us; 32768us; 87us; 185us; 19us; 32768us; 60us; 173us; 61us; 178us; 62us; 179us; 63us; 180us; 64us; 181us; 65us; 182us; 66us; 168us; 67us; 169us; 68us; 165us; 69us; 166us; 70us; 167us; 71us; 170us; 72us; 171us; 73us; 172us; 74us; 174us; 75us; 175us; 76us; 176us; 77us; 177us; 78us; 164us; 1us; 32768us; 88us; 187us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 0us; 16481us; 0us; 16482us; 0us; 16483us; 0us; 16484us; 0us; 16485us; 0us; 16487us; 1us; 32768us; 94us; 159us; 17us; 16445us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 86us; 203us; 1us; 16488us; 89us; 200us; 0us; 16489us; 0us; 16491us; 1us; 16493us; 34us; 217us; 0us; 16494us; 0us; 16496us; 0us; 16497us; 0us; 16498us; 0us; 16499us; 0us; 16500us; 1us; 32768us; 34us; 214us; 0us; 16501us; 1us; 16488us; 89us; 200us; 0us; 16502us; 1us; 16488us; 89us; 200us; 0us; 16503us; 4us; 16495us; 16us; 209us; 17us; 211us; 53us; 208us; 54us; 210us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16505us; 2us; 32768us; 87us; 24us; 94us; 159us; 0us; 16508us; 0us; 16509us; 2us; 32768us; 34us; 212us; 53us; 213us; 1us; 32768us; 94us; 159us; 1us; 16506us; 29us; 222us; 1us; 32768us; 88us; 229us; 0us; 16510us; 1us; 16511us; 80us; 231us; 3us; 32768us; 57us; 224us; 87us; 225us; 94us; 159us; 0us; 16512us; 18us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 68us; 234us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 32us; 235us; 0us; 16514us; 1us; 32768us; 32us; 237us; 0us; 16515us; 1us; 32768us; 60us; 239us; 4us; 16495us; 16us; 209us; 17us; 211us; 53us; 208us; 54us; 210us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16516us; 1us; 16517us; 80us; 243us; 3us; 32768us; 57us; 224us; 87us; 225us; 94us; 159us; 0us; 16518us; 0us; 16520us; 0us; 16521us; 1us; 32768us; 94us; 159us; 1us; 32768us; 32us; 249us; 0us; 16522us; 1us; 32768us; 32us; 251us; 0us; 16523us; 1us; 32768us; 19us; 345us; 0us; 16524us; 1us; 32768us; 87us; 255us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 88us; 257us; 1us; 16589us; 28us; 435us; 1us; 16513us; 27us; 233us; 1us; 32768us; 85us; 260us; 28us; 16492us; 4us; 125us; 6us; 276us; 7us; 291us; 18us; 250us; 20us; 254us; 21us; 263us; 22us; 247us; 23us; 303us; 25us; 300us; 26us; 320us; 28us; 297us; 34us; 215us; 35us; 140us; 48us; 333us; 52us; 325us; 53us; 206us; 54us; 207us; 56us; 130us; 57us; 145us; 78us; 102us; 79us; 153us; 86us; 16551us; 87us; 58us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 152us; 1us; 32768us; 86us; 262us; 0us; 16525us; 1us; 32768us; 87us; 264us; 3us; 16519us; 57us; 224us; 87us; 225us; 94us; 159us; 1us; 32768us; 32us; 266us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 32us; 268us; 3us; 16519us; 57us; 224us; 87us; 225us; 94us; 159us; 1us; 32768us; 88us; 270us; 1us; 16589us; 28us; 435us; 1us; 16513us; 27us; 233us; 1us; 32768us; 85us; 273us; 28us; 16492us; 4us; 125us; 6us; 276us; 7us; 291us; 18us; 250us; 20us; 254us; 21us; 263us; 22us; 247us; 23us; 303us; 25us; 300us; 26us; 320us; 28us; 297us; 34us; 215us; 35us; 140us; 48us; 333us; 52us; 325us; 53us; 206us; 54us; 207us; 56us; 130us; 57us; 145us; 78us; 102us; 79us; 153us; 86us; 16551us; 87us; 58us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 152us; 1us; 32768us; 86us; 275us; 0us; 16526us; 1us; 16557us; 94us; 159us; 1us; 16395us; 85us; 28us; 2us; 32768us; 30us; 284us; 58us; 279us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 85us; 281us; 28us; 16492us; 4us; 125us; 6us; 276us; 7us; 291us; 18us; 250us; 20us; 254us; 21us; 263us; 22us; 247us; 23us; 303us; 25us; 300us; 26us; 320us; 28us; 297us; 34us; 215us; 35us; 140us; 48us; 333us; 52us; 325us; 53us; 206us; 54us; 207us; 56us; 130us; 57us; 145us; 78us; 102us; 79us; 153us; 86us; 16551us; 87us; 58us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 152us; 1us; 32768us; 86us; 283us; 0us; 16527us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 58us; 286us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 85us; 288us; 28us; 16492us; 4us; 125us; 6us; 276us; 7us; 291us; 18us; 250us; 20us; 254us; 21us; 263us; 22us; 247us; 23us; 303us; 25us; 300us; 26us; 320us; 28us; 297us; 34us; 215us; 35us; 140us; 48us; 333us; 52us; 325us; 53us; 206us; 54us; 207us; 56us; 130us; 57us; 145us; 78us; 102us; 79us; 153us; 86us; 16551us; 87us; 58us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 152us; 1us; 32768us; 86us; 290us; 0us; 16528us; 1us; 16557us; 94us; 159us; 1us; 16395us; 85us; 28us; 1us; 32768us; 58us; 294us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 32us; 296us; 0us; 16529us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 32us; 299us; 0us; 16530us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 32us; 302us; 0us; 16531us; 18us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 89us; 310us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 2us; 32768us; 24us; 306us; 32us; 305us; 0us; 16532us; 1us; 32768us; 85us; 307us; 28us; 16492us; 4us; 125us; 6us; 276us; 7us; 291us; 18us; 250us; 20us; 254us; 21us; 263us; 22us; 247us; 23us; 303us; 25us; 300us; 26us; 320us; 28us; 297us; 34us; 215us; 35us; 140us; 48us; 333us; 52us; 325us; 53us; 206us; 54us; 207us; 56us; 130us; 57us; 145us; 78us; 102us; 79us; 153us; 86us; 16551us; 87us; 58us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 152us; 1us; 32768us; 86us; 309us; 0us; 16533us; 1us; 32768us; 94us; 159us; 1us; 32768us; 86us; 312us; 18us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 89us; 315us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 32us; 314us; 0us; 16534us; 1us; 32768us; 94us; 159us; 1us; 32768us; 86us; 317us; 1us; 32768us; 91us; 318us; 1us; 32768us; 32us; 319us; 0us; 16535us; 11us; 16486us; 61us; 191us; 62us; 192us; 63us; 190us; 64us; 189us; 65us; 188us; 71us; 195us; 72us; 196us; 73us; 194us; 74us; 197us; 75us; 198us; 76us; 193us; 1us; 32768us; 85us; 322us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 86us; 324us; 0us; 16536us; 1us; 32768us; 94us; 159us; 1us; 32768us; 32us; 327us; 0us; 16537us; 1us; 32768us; 94us; 159us; 1us; 16506us; 29us; 222us; 1us; 16504us; 60us; 219us; 1us; 32768us; 32us; 332us; 0us; 16538us; 1us; 32768us; 94us; 159us; 1us; 32768us; 60us; 335us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 32us; 337us; 0us; 16539us; 2us; 16553us; 29us; 371us; 59us; 339us; 1us; 32768us; 94us; 159us; 1us; 32768us; 32us; 341us; 0us; 16540us; 1us; 32768us; 32us; 343us; 0us; 16541us; 0us; 16542us; 1us; 32768us; 87us; 346us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 88us; 348us; 1us; 32768us; 85us; 349us; 28us; 16492us; 4us; 125us; 6us; 276us; 7us; 291us; 18us; 250us; 20us; 254us; 21us; 263us; 22us; 247us; 23us; 303us; 25us; 300us; 26us; 320us; 28us; 297us; 34us; 215us; 35us; 140us; 48us; 333us; 52us; 325us; 53us; 206us; 54us; 207us; 56us; 130us; 57us; 145us; 78us; 102us; 79us; 153us; 86us; 16551us; 87us; 58us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 152us; 1us; 32768us; 86us; 351us; 1us; 16544us; 47us; 353us; 0us; 16543us; 2us; 32768us; 19us; 345us; 85us; 354us; 28us; 16492us; 4us; 125us; 6us; 276us; 7us; 291us; 18us; 250us; 20us; 254us; 21us; 263us; 22us; 247us; 23us; 303us; 25us; 300us; 26us; 320us; 28us; 297us; 34us; 215us; 35us; 140us; 48us; 333us; 52us; 325us; 53us; 206us; 54us; 207us; 56us; 130us; 57us; 145us; 78us; 102us; 79us; 153us; 86us; 16551us; 87us; 58us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 152us; 1us; 32768us; 86us; 356us; 0us; 16545us; 0us; 16546us; 28us; 16492us; 4us; 125us; 6us; 276us; 7us; 291us; 18us; 250us; 20us; 254us; 21us; 263us; 22us; 247us; 23us; 303us; 25us; 300us; 26us; 320us; 28us; 297us; 34us; 215us; 35us; 140us; 48us; 333us; 52us; 325us; 53us; 206us; 54us; 207us; 56us; 130us; 57us; 145us; 78us; 102us; 79us; 153us; 86us; 16551us; 87us; 58us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 152us; 1us; 32768us; 86us; 360us; 1us; 16547us; 85us; 358us; 0us; 16548us; 1us; 32768us; 32us; 363us; 12us; 16486us; 61us; 191us; 62us; 192us; 63us; 190us; 64us; 189us; 65us; 188us; 71us; 195us; 72us; 196us; 73us; 194us; 74us; 197us; 75us; 198us; 76us; 193us; 86us; 16549us; 1us; 16547us; 85us; 358us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16550us; 28us; 16492us; 4us; 125us; 6us; 276us; 7us; 291us; 18us; 250us; 20us; 254us; 21us; 263us; 22us; 247us; 23us; 303us; 25us; 300us; 26us; 320us; 28us; 297us; 34us; 215us; 35us; 140us; 48us; 333us; 52us; 325us; 53us; 206us; 54us; 207us; 56us; 130us; 57us; 145us; 78us; 102us; 79us; 153us; 86us; 16551us; 87us; 58us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 152us; 0us; 16552us; 1us; 16553us; 29us; 371us; 2us; 16553us; 29us; 371us; 59us; 398us; 2us; 32768us; 87us; 24us; 94us; 159us; 1us; 16555us; 80us; 373us; 1us; 32768us; 94us; 159us; 0us; 16556us; 0us; 16558us; 0us; 16560us; 0us; 16561us; 1us; 16488us; 89us; 200us; 1us; 32768us; 94us; 159us; 1us; 32768us; 29us; 381us; 2us; 32768us; 87us; 24us; 94us; 159us; 1us; 16488us; 89us; 200us; 1us; 32768us; 94us; 159us; 1us; 32768us; 29us; 385us; 2us; 32768us; 87us; 24us; 94us; 159us; 1us; 16488us; 89us; 200us; 1us; 32768us; 94us; 159us; 1us; 32768us; 29us; 389us; 2us; 32768us; 87us; 24us; 94us; 159us; 1us; 16565us; 80us; 391us; 4us; 16559us; 50us; 376us; 51us; 377us; 53us; 382us; 54us; 386us; 0us; 16566us; 0us; 16568us; 1us; 32768us; 60us; 395us; 17us; 32768us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 42us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 32768us; 32us; 397us; 0us; 16569us; 1us; 32768us; 94us; 159us; 1us; 32768us; 32us; 400us; 0us; 16570us; 1us; 16571us; 94us; 159us; 0us; 16572us; 1us; 32768us; 32us; 404us; 0us; 16573us; 0us; 16574us; 17us; 16575us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 43us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16576us; 1us; 16571us; 94us; 159us; 0us; 16578us; 19us; 16575us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 43us; 56us; 130us; 57us; 144us; 69us; 414us; 78us; 102us; 79us; 153us; 87us; 57us; 89us; 417us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16579us; 18us; 16575us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 43us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 89us; 422us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16580us; 1us; 32768us; 12us; 415us; 17us; 16575us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 43us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16581us; 1us; 32768us; 94us; 159us; 1us; 32768us; 91us; 419us; 1us; 32768us; 86us; 420us; 17us; 16575us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 43us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16582us; 1us; 32768us; 94us; 159us; 1us; 32768us; 91us; 424us; 1us; 32768us; 86us; 425us; 17us; 16575us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 43us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16583us; 17us; 16575us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 43us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16584us; 17us; 16575us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 43us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16585us; 17us; 16575us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 43us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 0us; 16586us; 6us; 16587us; 10us; 408us; 11us; 410us; 12us; 412us; 13us; 427us; 14us; 429us; 15us; 431us; 0us; 16588us; 17us; 16575us; 4us; 125us; 6us; 32us; 7us; 33us; 8us; 34us; 19us; 36us; 35us; 140us; 48us; 43us; 56us; 130us; 57us; 144us; 78us; 102us; 79us; 153us; 87us; 57us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 151us; 1us; 16589us; 28us; 435us; 0us; 16590us; 1us; 32768us; 40us; 439us; 0us; 16591us; 1us; 32768us; 87us; 441us; 5us; 16559us; 50us; 376us; 51us; 377us; 53us; 382us; 54us; 386us; 88us; 16567us; 1us; 32768us; 88us; 443us; 0us; 16593us; 1us; 16488us; 89us; 200us; 1us; 32768us; 2us; 446us; 0us; 16594us; 1us; 32768us; 94us; 159us; 0us; 16596us; 1us; 16488us; 89us; 200us; 1us; 32768us; 94us; 159us; 1us; 32768us; 29us; 452us; 2us; 32768us; 87us; 24us; 94us; 159us; 0us; 16597us; 1us; 16488us; 89us; 200us; 2us; 32768us; 44us; 184us; 94us; 159us; 1us; 32768us; 87us; 457us; 1us; 16557us; 94us; 159us; 1us; 32768us; 88us; 459us; 1us; 32768us; 29us; 460us; 2us; 32768us; 87us; 24us; 94us; 159us; 1us; 32768us; 94us; 159us; 1us; 32768us; 32us; 463us; 0us; 16598us; 1us; 16488us; 89us; 200us; 2us; 32768us; 44us; 184us; 94us; 159us; 1us; 32768us; 87us; 467us; 5us; 16559us; 50us; 376us; 51us; 377us; 53us; 382us; 54us; 386us; 88us; 16567us; 1us; 32768us; 88us; 469us; 1us; 16592us; 9us; 440us; 6us; 16587us; 10us; 408us; 11us; 410us; 12us; 412us; 13us; 427us; 14us; 429us; 15us; 431us; 2us; 32768us; 39us; 472us; 85us; 474us; 1us; 32768us; 32us; 473us; 0us; 16599us; 28us; 16492us; 4us; 125us; 6us; 276us; 7us; 291us; 18us; 250us; 20us; 254us; 21us; 263us; 22us; 247us; 23us; 303us; 25us; 300us; 26us; 320us; 28us; 297us; 34us; 215us; 35us; 140us; 48us; 333us; 52us; 325us; 53us; 206us; 54us; 207us; 56us; 130us; 57us; 145us; 78us; 102us; 79us; 153us; 86us; 16551us; 87us; 58us; 90us; 126us; 91us; 122us; 92us; 124us; 93us; 123us; 94us; 152us; 1us; 32768us; 86us; 476us; 0us; 16600us; 7us; 16490us; 0us; 16601us; 1us; 448us; 3us; 444us; 34us; 449us; 37us; 454us; 42us; 447us; 53us; 205us; 0us; 16602us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 11us; 13us; 14us; 16us; 18us; 19us; 21us; 22us; 24us; 27us; 30us; 32us; 34us; 36us; 38us; 40us; 43us; 46us; 50us; 51us; 53us; 54us; 57us; 58us; 61us; 62us; 80us; 82us; 84us; 85us; 86us; 87us; 88us; 110us; 128us; 130us; 148us; 150us; 168us; 169us; 171us; 173us; 175us; 177us; 195us; 213us; 215us; 218us; 236us; 237us; 239us; 241us; 243us; 261us; 262us; 281us; 302us; 304us; 305us; 326us; 347us; 366us; 383us; 401us; 415us; 429us; 443us; 452us; 461us; 470us; 479us; 486us; 493us; 497us; 501us; 505us; 528us; 532us; 555us; 568us; 581us; 594us; 607us; 620us; 633us; 646us; 659us; 672us; 685us; 698us; 711us; 713us; 714us; 727us; 740us; 753us; 766us; 779us; 792us; 793us; 806us; 824us; 826us; 827us; 845us; 848us; 849us; 867us; 869us; 870us; 873us; 875us; 893us; 895us; 896us; 898us; 900us; 918us; 920us; 921us; 922us; 923us; 924us; 925us; 927us; 929us; 931us; 932us; 935us; 953us; 955us; 956us; 974us; 976us; 978us; 996us; 998us; 999us; 1001us; 1019us; 1021us; 1022us; 1023us; 1026us; 1028us; 1030us; 1048us; 1050us; 1051us; 1053us; 1058us; 1060us; 1061us; 1063us; 1081us; 1082us; 1083us; 1084us; 1085us; 1087us; 1089us; 1090us; 1091us; 1092us; 1093us; 1094us; 1095us; 1096us; 1097us; 1098us; 1099us; 1100us; 1101us; 1102us; 1103us; 1104us; 1105us; 1106us; 1107us; 1108us; 1109us; 1110us; 1112us; 1132us; 1134us; 1135us; 1136us; 1137us; 1138us; 1139us; 1140us; 1141us; 1142us; 1143us; 1144us; 1145us; 1146us; 1147us; 1149us; 1167us; 1169us; 1171us; 1172us; 1173us; 1175us; 1176us; 1177us; 1178us; 1179us; 1180us; 1181us; 1183us; 1184us; 1186us; 1187us; 1189us; 1190us; 1195us; 1213us; 1214us; 1217us; 1218us; 1219us; 1222us; 1224us; 1226us; 1228us; 1229us; 1231us; 1235us; 1236us; 1255us; 1257us; 1258us; 1260us; 1261us; 1263us; 1268us; 1286us; 1287us; 1289us; 1293us; 1294us; 1295us; 1296us; 1298us; 1300us; 1301us; 1303us; 1304us; 1306us; 1307us; 1309us; 1327us; 1329us; 1331us; 1333us; 1335us; 1364us; 1366us; 1367us; 1369us; 1373us; 1375us; 1393us; 1395us; 1399us; 1401us; 1403us; 1405us; 1407us; 1436us; 1438us; 1439us; 1441us; 1443us; 1446us; 1464us; 1466us; 1495us; 1497us; 1498us; 1516us; 1518us; 1536us; 1538us; 1567us; 1569us; 1570us; 1572us; 1574us; 1576us; 1594us; 1596us; 1597us; 1615us; 1617us; 1618us; 1636us; 1638us; 1639us; 1658us; 1661us; 1662us; 1664us; 1693us; 1695us; 1696us; 1698us; 1700us; 1719us; 1721us; 1722us; 1724us; 1726us; 1728us; 1730us; 1731us; 1743us; 1745us; 1763us; 1765us; 1766us; 1768us; 1770us; 1771us; 1773us; 1775us; 1777us; 1779us; 1780us; 1782us; 1784us; 1802us; 1804us; 1805us; 1808us; 1810us; 1812us; 1813us; 1815us; 1816us; 1817us; 1819us; 1837us; 1839us; 1841us; 1870us; 1872us; 1874us; 1875us; 1878us; 1907us; 1909us; 1910us; 1911us; 1940us; 1942us; 1944us; 1945us; 1947us; 1960us; 1962us; 1980us; 1981us; 2010us; 2011us; 2013us; 2016us; 2019us; 2021us; 2023us; 2024us; 2025us; 2026us; 2027us; 2029us; 2031us; 2033us; 2036us; 2038us; 2040us; 2042us; 2045us; 2047us; 2049us; 2051us; 2054us; 2056us; 2061us; 2062us; 2063us; 2065us; 2083us; 2085us; 2086us; 2088us; 2090us; 2091us; 2093us; 2094us; 2096us; 2097us; 2098us; 2116us; 2117us; 2119us; 2120us; 2140us; 2141us; 2160us; 2161us; 2163us; 2181us; 2182us; 2184us; 2186us; 2188us; 2206us; 2207us; 2209us; 2211us; 2213us; 2231us; 2232us; 2250us; 2251us; 2269us; 2270us; 2288us; 2289us; 2296us; 2297us; 2315us; 2317us; 2318us; 2320us; 2321us; 2323us; 2329us; 2331us; 2332us; 2334us; 2336us; 2337us; 2339us; 2340us; 2342us; 2344us; 2346us; 2349us; 2350us; 2352us; 2355us; 2357us; 2359us; 2361us; 2363us; 2366us; 2368us; 2370us; 2371us; 2373us; 2376us; 2378us; 2384us; 2386us; 2388us; 2395us; 2398us; 2400us; 2401us; 2430us; 2432us; 2433us; 2441us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 3us; 3us; 0us; 2us; 1us; 3us; 4us; 3us; 1us; 3us; 0us; 4us; 1us; 1us; 1us; 1us; 6us; 6us; 5us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 2us; 4us; 4us; 6us; 3us; 6us; 7us; 1us; 1us; 1us; 1us; 4us; 4us; 7us; 4us; 1us; 4us; 1us; 2us; 1us; 3us; 0us; 1us; 1us; 1us; 3us; 0us; 1us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 5us; 0us; 1us; 0us; 1us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 3us; 0us; 3us; 0us; 2us; 1us; 1us; 5us; 1us; 3us; 0us; 3us; 3us; 4us; 1us; 3us; 0us; 1us; 2us; 3us; 2us; 2us; 9us; 13us; 8us; 10us; 6us; 3us; 3us; 3us; 6us; 6us; 9us; 5us; 3us; 5us; 5us; 5us; 2us; 2us; 8us; 0us; 4us; 2us; 0us; 4us; 2us; 5us; 0us; 2us; 1us; 3us; 1us; 3us; 0us; 1us; 0us; 1us; 1us; 5us; 5us; 5us; 1us; 3us; 0us; 1us; 4us; 4us; 0us; 2us; 2us; 5us; 0us; 2us; 2us; 2us; 2us; 2us; 4us; 6us; 6us; 2us; 2us; 2us; 0us; 2us; 0us; 3us; 2us; 0us; 4us; 3us; 2us; 1us; 6us; 11us; 10us; 11us; 0us; 2us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 3us; 4us; 4us; 4us; 4us; 5us; 5us; 6us; 6us; 7us; 7us; 7us; 8us; 8us; 8us; 8us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 9us; 10us; 10us; 11us; 11us; 12us; 13us; 13us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; 23us; 23us; 23us; 23us; 23us; 24us; 24us; 25us; 25us; 26us; 26us; 27us; 27us; 28us; 28us; 28us; 29us; 29us; 30us; 30us; 30us; 31us; 32us; 32us; 33us; 33us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 35us; 36us; 36us; 36us; 37us; 37us; 38us; 38us; 39us; 39us; 40us; 40us; 41us; 41us; 42us; 42us; 43us; 43us; 43us; 44us; 44us; 44us; 45us; 45us; 46us; 46us; 47us; 47us; 48us; 48us; 49us; 49us; 50us; 50us; 51us; 52us; 52us; 52us; 52us; 52us; 52us; 52us; 52us; 52us; 53us; 53us; 54us; 54us; 55us; 56us; 56us; 57us; 57us; 57us; 57us; 57us; 57us; 57us; 58us; 58us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 65535us; 16385us; 65535us; 65535us; 16386us; 65535us; 16388us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16390us; 65535us; 16391us; 65535us; 16392us; 65535us; 16394us; 65535us; 65535us; 65535us; 16396us; 16397us; 16398us; 16399us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16401us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16402us; 65535us; 65535us; 65535us; 65535us; 16403us; 65535us; 65535us; 65535us; 16404us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16423us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 16426us; 65535us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 65535us; 16430us; 16431us; 16432us; 16433us; 16434us; 65535us; 65535us; 65535us; 16435us; 65535us; 65535us; 65535us; 16436us; 65535us; 65535us; 65535us; 65535us; 65535us; 16437us; 65535us; 65535us; 65535us; 16438us; 16439us; 65535us; 65535us; 65535us; 65535us; 65535us; 16440us; 65535us; 65535us; 65535us; 16442us; 65535us; 65535us; 16444us; 16446us; 16447us; 16452us; 65535us; 65535us; 16453us; 16454us; 16455us; 16456us; 16457us; 16458us; 16459us; 16460us; 16461us; 16462us; 16463us; 16464us; 16465us; 16466us; 16467us; 16468us; 16469us; 16470us; 16471us; 16472us; 16473us; 65535us; 65535us; 65535us; 16474us; 16475us; 16476us; 16477us; 16478us; 16479us; 16480us; 16481us; 16482us; 16483us; 16484us; 16485us; 16487us; 65535us; 65535us; 65535us; 65535us; 16489us; 16491us; 65535us; 16494us; 16496us; 16497us; 16498us; 16499us; 16500us; 65535us; 16501us; 65535us; 16502us; 65535us; 16503us; 65535us; 65535us; 16505us; 65535us; 16508us; 16509us; 65535us; 65535us; 65535us; 65535us; 16510us; 65535us; 65535us; 16512us; 65535us; 65535us; 16514us; 65535us; 16515us; 65535us; 65535us; 65535us; 16516us; 65535us; 65535us; 16518us; 16520us; 16521us; 65535us; 65535us; 16522us; 65535us; 16523us; 65535us; 16524us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16525us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16526us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16527us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16528us; 65535us; 65535us; 65535us; 65535us; 65535us; 16529us; 65535us; 65535us; 16530us; 65535us; 65535us; 16531us; 65535us; 65535us; 16532us; 65535us; 65535us; 65535us; 16533us; 65535us; 65535us; 65535us; 65535us; 16534us; 65535us; 65535us; 65535us; 65535us; 16535us; 65535us; 65535us; 65535us; 65535us; 16536us; 65535us; 65535us; 16537us; 65535us; 65535us; 65535us; 65535us; 16538us; 65535us; 65535us; 65535us; 65535us; 16539us; 65535us; 65535us; 65535us; 16540us; 65535us; 16541us; 16542us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16543us; 65535us; 65535us; 65535us; 16545us; 16546us; 65535us; 65535us; 65535us; 16548us; 65535us; 65535us; 65535us; 65535us; 16550us; 65535us; 16552us; 65535us; 65535us; 65535us; 65535us; 65535us; 16556us; 16558us; 16560us; 16561us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16566us; 16568us; 65535us; 65535us; 65535us; 16569us; 65535us; 65535us; 16570us; 65535us; 16572us; 65535us; 16573us; 16574us; 65535us; 16576us; 65535us; 16578us; 65535us; 16579us; 65535us; 16580us; 65535us; 65535us; 16581us; 65535us; 65535us; 65535us; 65535us; 16582us; 65535us; 65535us; 65535us; 65535us; 16583us; 65535us; 16584us; 65535us; 16585us; 65535us; 16586us; 65535us; 16588us; 65535us; 65535us; 16590us; 65535us; 16591us; 65535us; 65535us; 65535us; 16593us; 65535us; 65535us; 16594us; 65535us; 16596us; 65535us; 65535us; 65535us; 65535us; 16597us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16598us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16599us; 65535us; 65535us; 16600us; 65535us; 16602us; |]
let _fsyacc_reductions ()  =    [| 
# 944 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : include_decl list * decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 953 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Includes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "parse.fsy"
                                                 (_1, _2) 
                   )
# 89 "parse.fsy"
                 : include_decl list * decls));
# 965 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attrs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc * string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "parse.fsy"
                                                {inc_loc = _1; inc_attrs = _2; inc_path = snd _3} 
                   )
# 92 "parse.fsy"
                 : 'Include));
# 978 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "parse.fsy"
                           [] 
                   )
# 95 "parse.fsy"
                 : 'Includes));
# 988 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Include)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Includes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "parse.fsy"
                                            _1::_2 
                   )
# 96 "parse.fsy"
                 : 'Includes));
# 1000 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyQualifiedId)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "parse.fsy"
                                          TName _1 
                   )
# 99 "parse.fsy"
                 : 'Type));
# 1011 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "parse.fsy"
                                              TApp (_1, []) 
                   )
# 100 "parse.fsy"
                 : 'Type));
# 1024 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'TypeArgs)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "parse.fsy"
                                                       TApp (_1, _3) 
                   )
# 101 "parse.fsy"
                 : 'Type));
# 1038 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "parse.fsy"
                                              _2 
                   )
# 102 "parse.fsy"
                 : 'Type));
# 1051 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "parse.fsy"
                                [_1] 
                   )
# 104 "parse.fsy"
                 : 'TypeArgs));
# 1062 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'TypeArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "parse.fsy"
                                               _1::_3 
                   )
# 105 "parse.fsy"
                 : 'TypeArgs));
# 1075 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "parse.fsy"
                           [] 
                   )
# 108 "parse.fsy"
                 : 'Triggers));
# 1085 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exps1)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Triggers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "parse.fsy"
                                                        _2::_4 
                   )
# 109 "parse.fsy"
                 : 'Triggers));
# 1099 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "parse.fsy"
                                  Forall 
                   )
# 112 "parse.fsy"
                 : 'BindOp));
# 1110 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "parse.fsy"
                                  Exists 
                   )
# 113 "parse.fsy"
                 : 'BindOp));
# 1121 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "parse.fsy"
                                  Lambda 
                   )
# 114 "parse.fsy"
                 : 'BindOp));
# 1132 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "parse.fsy"
                                _1 
                   )
# 117 "parse.fsy"
                 : 'Exp));
# 1143 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "parse.fsy"
                                                    EOp (Cond, [_2; _4; _6]) 
                   )
# 118 "parse.fsy"
                 : 'Exp));
# 1159 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formal)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "parse.fsy"
                                                         EBind (BindLet, [_4], [_2], [], _6) 
                   )
# 119 "parse.fsy"
                 : 'Exp));
# 1175 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'BindOp)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Triggers)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "parse.fsy"
                                                                  EBind (_1, [], _2, _3, _5) 
                   )
# 120 "parse.fsy"
                 : 'Exp));
# 1190 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "parse.fsy"
                                             _2 
                   )
# 123 "parse.fsy"
                 : 'Exp1));
# 1203 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "parse.fsy"
                                              makeBop BEquiv _2 _1 _3 
                   )
# 124 "parse.fsy"
                 : 'Exp1));
# 1216 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "parse.fsy"
                                            makeBop BImply _2 _1 _3 
                   )
# 125 "parse.fsy"
                 : 'Exp1));
# 1229 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "parse.fsy"
                                            makeBop BExply _2 _1 _3 
                   )
# 126 "parse.fsy"
                 : 'Exp1));
# 1242 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "parse.fsy"
                                            makeBop BAnd _2 _1 _3 
                   )
# 127 "parse.fsy"
                 : 'Exp1));
# 1255 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "parse.fsy"
                                            makeBop BOr _2 _1 _3 
                   )
# 128 "parse.fsy"
                 : 'Exp1));
# 1268 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "parse.fsy"
                                          makeBop BEq _2 _1 _3 
                   )
# 129 "parse.fsy"
                 : 'Exp1));
# 1281 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "parse.fsy"
                                        makeBop BSeq _2 _1 _3 
                   )
# 130 "parse.fsy"
                 : 'Exp1));
# 1294 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "parse.fsy"
                                        makeBop BNe _2 _1 _3 
                   )
# 131 "parse.fsy"
                 : 'Exp1));
# 1307 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "parse.fsy"
                                        makeBop BLt _2 _1 _3 
                   )
# 132 "parse.fsy"
                 : 'Exp1));
# 1320 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "parse.fsy"
                                        makeBop BGt _2 _1 _3 
                   )
# 133 "parse.fsy"
                 : 'Exp1));
# 1333 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "parse.fsy"
                                        makeBop BLe _2 _1 _3 
                   )
# 134 "parse.fsy"
                 : 'Exp1));
# 1346 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "parse.fsy"
                                        makeBop BGe _2 _1 _3 
                   )
# 135 "parse.fsy"
                 : 'Exp1));
# 1359 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "parse.fsy"
                                         expAt _2 (EOp (Uop (UIs _3), [_1])) 
                   )
# 136 "parse.fsy"
                 : 'Exp1));
# 1372 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "parse.fsy"
                                          makeBop BAdd _2 _1 _3 
                   )
# 137 "parse.fsy"
                 : 'Exp1));
# 1385 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "parse.fsy"
                                           makeBop BSub _2 _1 _3 
                   )
# 138 "parse.fsy"
                 : 'Exp1));
# 1398 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "parse.fsy"
                                          makeBop BMul _2 _1 _3 
                   )
# 139 "parse.fsy"
                 : 'Exp1));
# 1411 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "parse.fsy"
                                           makeBop BDiv _2 _1 _3 
                   )
# 140 "parse.fsy"
                 : 'Exp1));
# 1424 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "parse.fsy"
                                             makeBop BMod _2 _1 _3 
                   )
# 141 "parse.fsy"
                 : 'Exp1));
# 1437 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "parse.fsy"
                                                    makeUop UNeg _2 _3 
                   )
# 142 "parse.fsy"
                 : 'Exp1));
# 1451 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "parse.fsy"
                                     makeUop UNot _1 _2 
                   )
# 143 "parse.fsy"
                 : 'Exp1));
# 1463 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "parse.fsy"
                                                       expAt _2 (EOp (Bop BIn, [_3; _1])) 
                   )
# 144 "parse.fsy"
                 : 'Exp1));
# 1477 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "parse.fsy"
                                                      expAt _2 (EOp (Subscript, [_1; _3])) 
                   )
# 145 "parse.fsy"
                 : 'Exp1));
# 1491 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "parse.fsy"
                                                                  expAt _2 (EOp (Update, [_1; _3; _5])) 
                   )
# 146 "parse.fsy"
                 : 'Exp1));
# 1507 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "parse.fsy"
                                          expAt _2 (EOp (FieldOp _3, [_1])) 
                   )
# 147 "parse.fsy"
                 : 'Exp1));
# 1520 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exps)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "parse.fsy"
                                                             expAt _4 (EApply (exp2id _1 _3, _5)) 
                   )
# 148 "parse.fsy"
                 : 'Exp1));
# 1536 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "parse.fsy"
                                                                    expAt _2 (EOp (FieldUpdate _4, [_1; _6])) 
                   )
# 149 "parse.fsy"
                 : 'Exp1));
# 1553 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "parse.fsy"
                                   expAt (fst _1) (EBool (snd _1)) 
                   )
# 150 "parse.fsy"
                 : 'Exp1));
# 1564 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * bigint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "parse.fsy"
                                  expAt (fst _1) (EInt (snd _1)) 
                   )
# 151 "parse.fsy"
                 : 'Exp1));
# 1575 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "parse.fsy"
                                   expAt (fst _1) (EReal (snd _1)) 
                   )
# 152 "parse.fsy"
                 : 'Exp1));
# 1586 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "parse.fsy"
                                  expAt (fst _1) (EString (snd _1)) 
                   )
# 153 "parse.fsy"
                 : 'Exp1));
# 1597 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * int)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc * bigint)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "parse.fsy"
                                                   expAt (fst _1) (EBitVector (snd _1, snd _3)) 
                   )
# 154 "parse.fsy"
                 : 'Exp1));
# 1611 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "parse.fsy"
                                                 expAt _1 (EOp (Uop UOld, [_3])) 
                   )
# 155 "parse.fsy"
                 : 'Exp1));
# 1625 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "parse.fsy"
                                                                       expAt _1 (EOp (Bop BOldAt, [_3; _6])) 
                   )
# 156 "parse.fsy"
                 : 'Exp1));
# 1642 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "parse.fsy"
                                                   expAt _1 (EOp (Uop UConst, [_3])) 
                   )
# 157 "parse.fsy"
                 : 'Exp1));
# 1656 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "parse.fsy"
                                expAt _1 (EVar (Reserved "this")) 
                   )
# 158 "parse.fsy"
                 : 'Exp1));
# 1667 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exps)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "parse.fsy"
                                                    expAt _2 (EApply (_1, _3)) 
                   )
# 159 "parse.fsy"
                 : 'Exp1));
# 1681 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "parse.fsy"
                              expAt (fst _1) (EVar (Id (snd _1))) 
                   )
# 160 "parse.fsy"
                 : 'Exp1));
# 1692 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "parse.fsy"
                                 expAt _1 (EOp (Uop UToOperand, [expAt (fst _2) (EVar (Id (snd _2)))])) 
                   )
# 161 "parse.fsy"
                 : 'Exp1));
# 1704 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "parse.fsy"
                               [_1] 
                   )
# 163 "parse.fsy"
                 : 'Exps1));
# 1715 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exps1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "parse.fsy"
                                           _1::_3 
                   )
# 164 "parse.fsy"
                 : 'Exps1));
# 1728 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "parse.fsy"
                           [] 
                   )
# 166 "parse.fsy"
                 : 'Exps));
# 1738 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exps1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "parse.fsy"
                                 _1 
                   )
# 167 "parse.fsy"
                 : 'Exps));
# 1749 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "parse.fsy"
                              Id (snd _1) 
                   )
# 169 "parse.fsy"
                 : 'AnyId));
# 1760 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "parse.fsy"
                                 [_1] 
                   )
# 171 "parse.fsy"
                 : 'AnyIds1));
# 1771 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyIds1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "parse.fsy"
                                               _1::_3 
                   )
# 172 "parse.fsy"
                 : 'AnyIds1));
# 1784 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "parse.fsy"
                           [] 
                   )
# 174 "parse.fsy"
                 : 'AnyIds));
# 1794 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyIds1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "parse.fsy"
                                   _1 
                   )
# 175 "parse.fsy"
                 : 'AnyIds));
# 1805 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "parse.fsy"
                                 _1 
                   )
# 177 "parse.fsy"
                 : 'AnyQualifiedId));
# 1816 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyQualifiedId)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc * string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "parse.fsy"
                                                 Id (string_of_id _1 + "." + (snd _3)) 
                   )
# 178 "parse.fsy"
                 : 'AnyQualifiedId));
# 1829 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "parse.fsy"
                                _1 
                   )
# 181 "parse.fsy"
                 : 'OpToken));
# 1840 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "parse.fsy"
                                _1 
                   )
# 182 "parse.fsy"
                 : 'OpToken));
# 1851 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "parse.fsy"
                                 _1 
                   )
# 183 "parse.fsy"
                 : 'OpToken));
# 1862 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "parse.fsy"
                                   _1 
                   )
# 184 "parse.fsy"
                 : 'OpToken));
# 1873 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "parse.fsy"
                                _1 
                   )
# 185 "parse.fsy"
                 : 'OpToken));
# 1884 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "parse.fsy"
                                 _1 
                   )
# 186 "parse.fsy"
                 : 'OpToken));
# 1895 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "parse.fsy"
                              _1 
                   )
# 187 "parse.fsy"
                 : 'OpToken));
# 1906 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "parse.fsy"
                              _1 
                   )
# 188 "parse.fsy"
                 : 'OpToken));
# 1917 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "parse.fsy"
                              _1 
                   )
# 189 "parse.fsy"
                 : 'OpToken));
# 1928 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "parse.fsy"
                                   _1 
                   )
# 190 "parse.fsy"
                 : 'OpToken));
# 1939 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "parse.fsy"
                              _1 
                   )
# 191 "parse.fsy"
                 : 'OpToken));
# 1950 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "parse.fsy"
                              _1 
                   )
# 192 "parse.fsy"
                 : 'OpToken));
# 1961 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "parse.fsy"
                                _1 
                   )
# 193 "parse.fsy"
                 : 'OpToken));
# 1972 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "parse.fsy"
                              _1 
                   )
# 194 "parse.fsy"
                 : 'OpToken));
# 1983 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "parse.fsy"
                                  _1 
                   )
# 195 "parse.fsy"
                 : 'OpToken));
# 1994 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "parse.fsy"
                                  _1 
                   )
# 196 "parse.fsy"
                 : 'OpToken));
# 2005 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "parse.fsy"
                                  _1 
                   )
# 197 "parse.fsy"
                 : 'OpToken));
# 2016 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "parse.fsy"
                                  _1 
                   )
# 198 "parse.fsy"
                 : 'OpToken));
# 2027 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "parse.fsy"
                                    _1 
                   )
# 199 "parse.fsy"
                 : 'OpToken));
# 2038 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "parse.fsy"
                                 _1 
                   )
# 201 "parse.fsy"
                 : 'AnyIdOrOp));
# 2049 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'OpToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "parse.fsy"
                                                          let (_, (_, s)) = _3 in Operator s 
                   )
# 202 "parse.fsy"
                 : 'AnyIdOrOp));
# 2063 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "parse.fsy"
                                    BEquiv 
                   )
# 204 "parse.fsy"
                 : 'CalcOp));
# 2074 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "parse.fsy"
                                  BImply 
                   )
# 205 "parse.fsy"
                 : 'CalcOp));
# 2085 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "parse.fsy"
                                  BExply 
                   )
# 206 "parse.fsy"
                 : 'CalcOp));
# 2096 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "parse.fsy"
                                  BAnd 
                   )
# 207 "parse.fsy"
                 : 'CalcOp));
# 2107 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "parse.fsy"
                                  BOr 
                   )
# 208 "parse.fsy"
                 : 'CalcOp));
# 2118 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "parse.fsy"
                                BEq 
                   )
# 209 "parse.fsy"
                 : 'CalcOp));
# 2129 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "parse.fsy"
                              BSeq 
                   )
# 210 "parse.fsy"
                 : 'CalcOp));
# 2140 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "parse.fsy"
                              BLt 
                   )
# 211 "parse.fsy"
                 : 'CalcOp));
# 2151 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "parse.fsy"
                              BGt 
                   )
# 212 "parse.fsy"
                 : 'CalcOp));
# 2162 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "parse.fsy"
                              BLe 
                   )
# 213 "parse.fsy"
                 : 'CalcOp));
# 2173 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "parse.fsy"
                              BGe 
                   )
# 214 "parse.fsy"
                 : 'CalcOp));
# 2184 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "parse.fsy"
                           None 
                   )
# 216 "parse.fsy"
                 : 'CalcOpOpt));
# 2194 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'CalcOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "parse.fsy"
                                  Some _1 
                   )
# 217 "parse.fsy"
                 : 'CalcOpOpt));
# 2205 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "parse.fsy"
                           [] 
                   )
# 220 "parse.fsy"
                 : 'Attrs));
# 2215 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exps)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attrs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "parse.fsy"
                                                               (_2, _3)::_5 
                   )
# 221 "parse.fsy"
                 : 'Attrs));
# 2230 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "parse.fsy"
                                 NotGhost 
                   )
# 223 "parse.fsy"
                 : 'GhostOpt));
# 2240 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "parse.fsy"
                                                      Ghost 
                   )
# 223 "parse.fsy"
                 : 'GhostOpt));
# 2251 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "parse.fsy"
                                     SmPlain 
                   )
# 224 "parse.fsy"
                 : 'StmtModifier));
# 2261 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "parse.fsy"
                                                         SmGhost 
                   )
# 224 "parse.fsy"
                 : 'StmtModifier));
# 2272 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "parse.fsy"
                                                                              SmInline 
                   )
# 224 "parse.fsy"
                 : 'StmtModifier));
# 2283 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "parse.fsy"
                           fun e -> e 
                   )
# 227 "parse.fsy"
                 : 'ExpCall));
# 2293 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "parse.fsy"
                                 fun e -> EOp (Uop (UCall CallGhost), [e]) 
                   )
# 228 "parse.fsy"
                 : 'ExpCall));
# 2304 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "parse.fsy"
                                 fun e -> EOp (Uop (UCall CallLemma), [e]) 
                   )
# 229 "parse.fsy"
                 : 'ExpCall));
# 2315 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "parse.fsy"
                                  fun e -> EOp (Uop (UCall CallInline), [e]) 
                   )
# 230 "parse.fsy"
                 : 'ExpCall));
# 2326 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "parse.fsy"
                                fun e -> EOp (Uop (UCall CallOutline), [e]) 
                   )
# 231 "parse.fsy"
                 : 'ExpCall));
# 2337 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "parse.fsy"
                               (_1, NotGhost) 
                   )
# 234 "parse.fsy"
                 : 'Var));
# 2348 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "parse.fsy"
                                     (_1, Ghost) 
                   )
# 235 "parse.fsy"
                 : 'Var));
# 2360 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attrs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "parse.fsy"
                                     let (s, a) = storageAttrs _2 in (_1, s, a) 
                   )
# 237 "parse.fsy"
                 : 'VarAttrs));
# 2372 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attrs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "parse.fsy"
                                           (_1, XGhost, _3) 
                   )
# 238 "parse.fsy"
                 : 'VarAttrs));
# 2385 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "parse.fsy"
                           None 
                   )
# 240 "parse.fsy"
                 : 'VarInit));
# 2395 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ExpCall)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "parse.fsy"
                                               Some (_2 _3) 
                   )
# 241 "parse.fsy"
                 : 'VarInit));
# 2408 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "parse.fsy"
                           None 
                   )
# 243 "parse.fsy"
                 : 'VarType));
# 2418 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "parse.fsy"
                                      Some _2 
                   )
# 244 "parse.fsy"
                 : 'VarType));
# 2430 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "parse.fsy"
                                 (_1, None) 
                   )
# 248 "parse.fsy"
                 : 'Lhs));
# 2441 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "parse.fsy"
                                (Reserved "this", None) 
                   )
# 249 "parse.fsy"
                 : 'Lhs));
# 2452 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Var)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'VarType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "parse.fsy"
                                                           let (_, g) = _2 in (_3, Some (_4, g)) 
                   )
# 250 "parse.fsy"
                 : 'Lhs));
# 2467 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Lhs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 "parse.fsy"
                               [_1] 
                   )
# 252 "parse.fsy"
                 : 'Lhss1));
# 2478 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Lhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Lhss1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "parse.fsy"
                                           _1::_3 
                   )
# 253 "parse.fsy"
                 : 'Lhss1));
# 2491 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "parse.fsy"
                           parse_err "a while loop must contain zero or more invariants followed by exactly one decreases clause" 
                   )
# 256 "parse.fsy"
                 : 'Decreases));
# 2501 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "parse.fsy"
                                               (_1, []) 
                   )
# 257 "parse.fsy"
                 : 'Decreases));
# 2514 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exps1)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 "parse.fsy"
                                                (_1, _2) 
                   )
# 258 "parse.fsy"
                 : 'Decreases));
# 2527 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Lhss1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ExpCall)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "parse.fsy"
                          
                           let (loc, (_, s)) = _2 in
                           stmtAt loc (SAssign (_1, _3 _4))
                         
                   )
# 261 "parse.fsy"
                 : 'ExpAssign));
# 2544 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ExpAssign)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 "parse.fsy"
                                     _1 
                   )
# 266 "parse.fsy"
                 : 'ExpAssigns1));
# 2555 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ExpAssign)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ExpAssigns1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 "parse.fsy"
                                                       _1 @ _3 
                   )
# 267 "parse.fsy"
                 : 'ExpAssigns1));
# 2568 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 "parse.fsy"
                           [] 
                   )
# 269 "parse.fsy"
                 : 'ExpAssigns));
# 2578 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ExpAssigns1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 270 "parse.fsy"
                                       _1 
                   )
# 270 "parse.fsy"
                 : 'ExpAssigns));
# 2589 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 "parse.fsy"
                                    stmtAt (fst _1) (SLabel (Id (snd _1))) 
                   )
# 272 "parse.fsy"
                 : 'Stmt));
# 2601 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 273 "parse.fsy"
                                           stmtAt _1 (SGoto _2) 
                   )
# 273 "parse.fsy"
                 : 'Stmt));
# 2614 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 274 "parse.fsy"
                                       stmtAt _1 SReturn 
                   )
# 274 "parse.fsy"
                 : 'Stmt));
# 2626 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtModifier)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'IfStmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 "parse.fsy"
                                               _2 _1 
                   )
# 275 "parse.fsy"
                 : 'Stmt));
# 2638 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Invariants)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Decreases)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 277 "parse.fsy"
                          
                           stmtAt _1 (SWhile (_3, exps_of_spec_exps _5, _6, _8))
                         
                   )
# 277 "parse.fsy"
                 : 'Stmt));
# 2659 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ExpAssigns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'ExpAssigns)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'Invariants)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'Decreases)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _12 = (let data = parseState.GetInput(12) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            let _13 = (let data = parseState.GetInput(13) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 281 "parse.fsy"
                          
                           _3 @ (stmtAt _1 (SWhile (_5, exps_of_spec_exps _9, _10, _12 @ _7)))
                         
                   )
# 281 "parse.fsy"
                 : 'Stmt));
# 2684 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Triggers)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 285 "parse.fsy"
                          
                           stmtAt _1 (SForall (_2, _3, EBool true, _5, _7))
                         
                   )
# 285 "parse.fsy"
                 : 'Stmt));
# 2704 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Triggers)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 289 "parse.fsy"
                          
                           stmtAt _1 (SForall (_2, _3, _5, _7, _9))
                         
                   )
# 289 "parse.fsy"
                 : 'Stmt));
# 2726 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Triggers)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 292 "parse.fsy"
                                                                       stmtAt _1 (SExists (_2, _3, _5)) 
                   )
# 292 "parse.fsy"
                 : 'Stmt));
# 2742 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 293 "parse.fsy"
                                              stmtAt _1 (SAssert ({assert_attrs_default with is_inv = true}, _2)) 
                   )
# 293 "parse.fsy"
                 : 'Stmt));
# 2755 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 294 "parse.fsy"
                                           stmtAt _1 (SAssume _2) 
                   )
# 294 "parse.fsy"
                 : 'Stmt));
# 2768 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 295 "parse.fsy"
                                           stmtAt _1 (SAssert (assert_attrs_default, _2)) 
                   )
# 295 "parse.fsy"
                 : 'Stmt));
# 2781 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 296 "parse.fsy"
                                                             stmtAt _1 (SForall ([], [], EBool true, _2, _5)) 
                   )
# 296 "parse.fsy"
                 : 'Stmt));
# 2797 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 298 "parse.fsy"
                          
                           let attrs =
                             match (_3, skip_loc _5) with
                             | (Id "split_here", EBool true) -> {assert_attrs_default with is_split = true}
                             | (Id "quick_start", EBool true) -> {assert_attrs_default with is_quickstart = true}
                             | (Id "quick_end", EBool true) -> {assert_attrs_default with is_quickend = true}
                             | (Id "quick_type", _) -> {assert_attrs_default with is_quicktype = true}
                             | _ -> parse_err ("unknown attribute: " + (err_id _3))
                             in
                           stmtAt _1 (SAssert (attrs, _5))
                         
                   )
# 298 "parse.fsy"
                 : 'Stmt));
# 2823 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : loc * bool)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 310 "parse.fsy"
                          
                           stmtAt _1 (if _3 = Id "split_here" && _6 = Id "refined" && snd _8 then SAssert ({assert_attrs_default with is_split = true; is_refined = true}, EBool true) else parse_err "Must use: assert {:split_here}{:refined} true;" )
                         
                   )
# 310 "parse.fsy"
                 : 'Stmt));
# 2844 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'CalcOpOpt)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'CalcContents)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 313 "parse.fsy"
                                                                     stmtAt _1 (SCalc (_2, _4)) 
                   )
# 313 "parse.fsy"
                 : 'Stmt));
# 2859 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 314 "parse.fsy"
                                             stmtAt _1 (SAssign ([], EOp(Uop UReveal, [EVar _2]))) 
                   )
# 314 "parse.fsy"
                 : 'Stmt));
# 2872 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'VarAttrs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'VarType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'VarInit)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 315 "parse.fsy"
                                                               let (l, g, a) = _1 in stmtAt l (SVar (_2, _3, Mutable, g, a, _4)) 
                   )
# 315 "parse.fsy"
                 : 'Stmt));
# 2887 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formal)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 316 "parse.fsy"
                                                       let (x, t) = _2 in stmtAt _1 (SVar (x, t, Immutable, XGhost, [], Some _4)) 
                   )
# 316 "parse.fsy"
                 : 'Stmt));
# 2902 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 317 "parse.fsy"
                                                     stmtAt _1 (SAlias (_2, _4)) 
                   )
# 317 "parse.fsy"
                 : 'Stmt));
# 2917 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ExpAssign)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 318 "parse.fsy"
                                          _1 
                   )
# 318 "parse.fsy"
                 : 'Stmt));
# 2929 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 319 "parse.fsy"
                                     stmtAt (one_loc_of_exp _2 _1) (SAssign ([], _1)) 
                   )
# 319 "parse.fsy"
                 : 'Stmt));
# 2941 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'ElseOpt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 322 "parse.fsy"
                          
                           fun sm -> stmtAt _2 (SIfElse (sm, _3, _6, _8 sm))
                         
                   )
# 322 "parse.fsy"
                 : 'IfStmt));
# 2961 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 326 "parse.fsy"
                           fun sm -> [] 
                   )
# 326 "parse.fsy"
                 : 'ElseOpt));
# 2971 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 327 "parse.fsy"
                                                    fun sm -> _3 
                   )
# 327 "parse.fsy"
                 : 'ElseOpt));
# 2985 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'IfStmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 328 "parse.fsy"
                                       _2 
                   )
# 328 "parse.fsy"
                 : 'ElseOpt));
# 2997 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 330 "parse.fsy"
                           [] 
                   )
# 330 "parse.fsy"
                 : 'CalcHints));
# 3007 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'CalcHints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 331 "parse.fsy"
                                                         _2::_4 
                   )
# 331 "parse.fsy"
                 : 'CalcHints));
# 3021 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 333 "parse.fsy"
                                    [{calc_exp = _1; calc_op = None; calc_hints = []}] 
                   )
# 333 "parse.fsy"
                 : 'CalcContents));
# 3033 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'CalcOpOpt)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'CalcHints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'CalcContents)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 334 "parse.fsy"
                                                                     {calc_exp = _1; calc_op = _3; calc_hints = _4} :: _5 
                   )
# 334 "parse.fsy"
                 : 'CalcContents));
# 3048 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 337 "parse.fsy"
                           [] 
                   )
# 337 "parse.fsy"
                 : 'Block));
# 3058 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Stmt)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 338 "parse.fsy"
                                      _1 @ _2 
                   )
# 338 "parse.fsy"
                 : 'Block));
# 3070 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 341 "parse.fsy"
                                 (_1, None) 
                   )
# 341 "parse.fsy"
                 : 'Formal));
# 3081 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 342 "parse.fsy"
                                            (_1, Some _3) 
                   )
# 342 "parse.fsy"
                 : 'Formal));
# 3094 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formal)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 344 "parse.fsy"
                                  [_1] 
                   )
# 344 "parse.fsy"
                 : 'Formals1));
# 3105 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formal)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formals1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 345 "parse.fsy"
                                                 _1::_3 
                   )
# 345 "parse.fsy"
                 : 'Formals1));
# 3118 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 347 "parse.fsy"
                           [] 
                   )
# 347 "parse.fsy"
                 : 'Formals));
# 3128 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formals1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 348 "parse.fsy"
                                    _1 
                   )
# 348 "parse.fsy"
                 : 'Formals));
# 3139 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 351 "parse.fsy"
                           In 
                   )
# 351 "parse.fsy"
                 : 'InOut));
# 3149 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 352 "parse.fsy"
                               Out 
                   )
# 352 "parse.fsy"
                 : 'InOut));
# 3160 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 353 "parse.fsy"
                                 InOut 
                   )
# 353 "parse.fsy"
                 : 'InOut));
# 3171 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'InOut)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attrs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 355 "parse.fsy"
                                                        if hasStorageAttr _2 then let (s, a) = storageAttrs _2 in (_3, _5, s, _1, a) else (_3, _5, XOperand, _1, _2) 
                   )
# 355 "parse.fsy"
                 : 'ProcFormal));
# 3186 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attrs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 356 "parse.fsy"
                                                        (_3, _5, XGhost, In, _2) 
                   )
# 356 "parse.fsy"
                 : 'ProcFormal));
# 3201 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attrs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 357 "parse.fsy"
                                                         (_3, _5, XInline, In, _2) 
                   )
# 357 "parse.fsy"
                 : 'ProcFormal));
# 3216 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ProcFormal)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 359 "parse.fsy"
                                      [_1] 
                   )
# 359 "parse.fsy"
                 : 'ProcFormals1));
# 3227 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ProcFormal)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ProcFormals1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 360 "parse.fsy"
                                                         _1::_3 
                   )
# 360 "parse.fsy"
                 : 'ProcFormals1));
# 3240 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 362 "parse.fsy"
                           [] 
                   )
# 362 "parse.fsy"
                 : 'ProcFormals));
# 3250 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ProcFormals1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 363 "parse.fsy"
                                        _1 
                   )
# 363 "parse.fsy"
                 : 'ProcFormals));
# 3261 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formal)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 366 "parse.fsy"
                                                   let (x, t) = _1 in (fst _2, LetsVar (x, t, _3)) 
                   )
# 366 "parse.fsy"
                 : 'LetBind));
# 3275 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 367 "parse.fsy"
                                                 (fst _2, LetsAlias (_1, _3)) 
                   )
# 367 "parse.fsy"
                 : 'LetBind));
# 3289 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 370 "parse.fsy"
                           [] 
                   )
# 370 "parse.fsy"
                 : 'LetBinds));
# 3299 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'LetBind)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'LetBinds)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 371 "parse.fsy"
                                            _1::_2 
                   )
# 371 "parse.fsy"
                 : 'LetBinds));
# 3311 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 374 "parse.fsy"
                                    (_2, SpecExp _1) 
                   )
# 374 "parse.fsy"
                 : 'SemiExp));
# 3323 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formal)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exp)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 375 "parse.fsy"
                                                       let (x, t) = _2 in (_1, SpecLet (x, t, _4)) 
                   )
# 375 "parse.fsy"
                 : 'SemiExp));
# 3338 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 378 "parse.fsy"
                           [] 
                   )
# 378 "parse.fsy"
                 : 'SemiExps));
# 3348 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SemiExp)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'SemiExps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 379 "parse.fsy"
                                            _1::_2 
                   )
# 379 "parse.fsy"
                 : 'SemiExps));
# 3360 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attrs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 381 "parse.fsy"
                                          
                   )
# 381 "parse.fsy"
                 : 'Req));
# 3372 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'LetBinds)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 384 "parse.fsy"
                                         (_1, Lets _2) 
                   )
# 384 "parse.fsy"
                 : 'SpecRaw));
# 3384 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'SemiExps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 385 "parse.fsy"
                                             (_1, RawSpec (RRequires Refined, _2)) 
                   )
# 385 "parse.fsy"
                 : 'SpecRaw));
# 3396 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'SemiExps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 386 "parse.fsy"
                                            (_1, RawSpec (REnsures Refined, _2)) 
                   )
# 386 "parse.fsy"
                 : 'SpecRaw));
# 3408 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'SemiExps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 387 "parse.fsy"
                                                           (_1, RawSpec (RRequiresEnsures, _4)) 
                   )
# 387 "parse.fsy"
                 : 'SpecRaw));
# 3422 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc * bool)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'SemiExps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 389 "parse.fsy"
                          
                           (match (_3, snd _4) with (Id "refined", false) -> () | _ -> parse_err "expected requires{:refined false}");
                           (_1, RawSpec (RRequires Unrefined, _6))
                         
                   )
# 389 "parse.fsy"
                 : 'SpecRaw));
# 3441 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc * bool)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'SemiExps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 394 "parse.fsy"
                          
                           (match (_3, snd _4) with (Id "refined", false) -> () | _ -> parse_err "expected requires{:refined false}");
                           (_1, RawSpec (REnsures Unrefined, _6))
                         
                   )
# 394 "parse.fsy"
                 : 'SpecRaw));
# 3460 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'SemiExps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 398 "parse.fsy"
                                          (_1, RawSpec (RModifies Read, _2)) 
                   )
# 398 "parse.fsy"
                 : 'SpecRaw));
# 3472 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'SemiExps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 399 "parse.fsy"
                                             (_1, RawSpec (RModifies Modify, _2)) 
                   )
# 399 "parse.fsy"
                 : 'SpecRaw));
# 3484 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'SemiExps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 400 "parse.fsy"
                                              (_1, RawSpec (RModifies Preserve, _2)) 
                   )
# 400 "parse.fsy"
                 : 'SpecRaw));
# 3496 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 402 "parse.fsy"
                           [] 
                   )
# 402 "parse.fsy"
                 : 'Specs));
# 3506 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SpecRaw)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Specs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 403 "parse.fsy"
                                         let (loc, s) = _1 in (loc, SpecRaw s)::_2 
                   )
# 403 "parse.fsy"
                 : 'Specs));
# 3518 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 406 "parse.fsy"
                           [] 
                   )
# 406 "parse.fsy"
                 : 'Invariants));
# 3528 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'SemiExps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Invariants)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 407 "parse.fsy"
                                                         _2 @ _3 
                   )
# 407 "parse.fsy"
                 : 'Invariants));
# 3541 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'GhostOpt)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 410 "parse.fsy"
                                              (_2, _1) 
                   )
# 410 "parse.fsy"
                 : 'Proc));
# 3553 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 412 "parse.fsy"
                           [] 
                   )
# 412 "parse.fsy"
                 : 'ProcRet));
# 3563 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ProcFormals)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 413 "parse.fsy"
                                                             _3 
                   )
# 413 "parse.fsy"
                 : 'ProcRet));
# 3577 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attrs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 416 "parse.fsy"
                          
                           (_1, DVerbatim (_2, _3))
                         
                   )
# 416 "parse.fsy"
                 : 'Decl));
# 3592 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyQualifiedId)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 419 "parse.fsy"
                                                 (_1, DPragma (ModuleName (string_of_id _2))) 
                   )
# 419 "parse.fsy"
                 : 'Decl));
# 3604 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc * string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 420 "parse.fsy"
                                         let (l, s) = _1 in (l, DPragma (ResetOptions s)) 
                   )
# 420 "parse.fsy"
                 : 'Decl));
# 3615 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attrs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 421 "parse.fsy"
                                                           let (s, a) = storageAttrs _2 in (_1, DVar (_3, _5, s, a)) 
                   )
# 421 "parse.fsy"
                 : 'Decl));
# 3631 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attrs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyIdOrOp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formals)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'Type)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : loc * (bool * string))) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyId)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 423 "parse.fsy"
                           (_1, DFun {fname = _3; fghost = Ghost; fargs = _5; fret = _8; fbody = None; fattrs = (Reserved "alias", [EVar _10])::_2}) 
                   )
# 423 "parse.fsy"
                 : 'Decl));
# 3652 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Proc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attrs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyIdOrOp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ProcFormals)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'ProcRet)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'Specs)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 429 "parse.fsy"
                          
                           (fst _1, DProc {pname = _3; pghost = snd _1; pinline = Inline; pargs = _5; prets = _7; pspecs = _8; pbody = None; pattrs = _2})
                         
                   )
# 429 "parse.fsy"
                 : 'Decl));
# 3674 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Proc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Attrs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'AnyIdOrOp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ProcFormals)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'ProcRet)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'Specs)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : loc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 433 "parse.fsy"
                          
                           (fst _1, DProc {pname = _3; pghost = snd _1; pinline = Inline; pargs = _5; prets = _7; pspecs = _8; pbody = Some _10; pattrs = _2})
                         
                   )
# 433 "parse.fsy"
                 : 'Decl));
# 3697 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 438 "parse.fsy"
                           [] 
                   )
# 438 "parse.fsy"
                 : 'Decls));
# 3707 "parse.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Decl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 439 "parse.fsy"
                                      _1::_2 
                   )
# 439 "parse.fsy"
                 : 'Decls));
|]
# 3720 "parse.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 98;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf : include_decl list * decls =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
